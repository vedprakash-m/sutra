{"file":"/Users/vedprakashmishra/sutra/src/hooks/useApi.ts","mappings":";;AAUA,wBA+CC;AAED,wCAgCC;AA3FD,iCAA4C;AAC5C,yCAA6C;AAC7C,kEAA0D;AAQ1D,SAAgB,MAAM,CACpB,OAAyB,EACzB,eAAsB,EAAE;IAExB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAiB;QACjD,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,IAAI;KACZ,CAAC,CAAC;IAEH,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,sBAAO,GAAE,CAAC;IAE5B,MAAM,SAAS,GAAG,KAAK,IAAI,EAAE;QAC3B,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC;YACH,sCAAsC;YACtC,IAAI,KAAK,EAAE,CAAC;gBACV,gBAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,OAAO,EAAE,CAAC;YAC/B,QAAQ,CAAC;gBACP,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,QAAQ,CAAC;gBACP,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB;aACpE,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC;IAEF,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;YACnB,2CAA2C;YAC3C,SAAS,EAAE,CAAC;QACd,CAAC;IACH,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC;IAE7B,OAAO;QACL,GAAG,KAAK;QACR,OAAO,EAAE,SAAS;KACnB,CAAC;AACJ,CAAC;AAED,SAAgB,cAAc;IAC5B,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAgB,IAAI,CAAC,CAAC;IACxD,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,sBAAO,GAAE,CAAC;IAE5B,MAAM,OAAO,GAAG,KAAK,EAAE,MAAwB,EAAqB,EAAE;QACpE,UAAU,CAAC,IAAI,CAAC,CAAC;QACjB,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEf,IAAI,CAAC;YACH,sCAAsC;YACtC,IAAI,KAAK,EAAE,CAAC;gBACV,gBAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,MAAM,EAAE,CAAC;YAC9B,OAAO,MAAM,CAAC;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,YAAY,GAChB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC;YAC/D,QAAQ,CAAC,YAAY,CAAC,CAAC;YACvB,MAAM,KAAK,CAAC;QACd,CAAC;gBAAS,CAAC;YACT,UAAU,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;QACL,OAAO;QACP,KAAK;QACL,OAAO;KACR,CAAC;AACJ,CAAC","names":[],"sources":["/Users/vedprakashmishra/sutra/src/hooks/useApi.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { apiService } from \"../services/api\";\nimport { useAuth } from \"../components/auth/AuthProvider\";\n\nexport interface UseApiState<T> {\n  data: T | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport function useApi<T>(\n  apiCall: () => Promise<T>,\n  dependencies: any[] = [],\n): UseApiState<T> & { refetch: () => Promise<void> } {\n  const [state, setState] = useState<UseApiState<T>>({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  const { token } = useAuth();\n\n  const fetchData = async () => {\n    setState((prev) => ({ ...prev, loading: true, error: null }));\n\n    try {\n      // Set the auth token for API requests\n      if (token) {\n        apiService.setToken(token);\n      }\n\n      const result = await apiCall();\n      setState({\n        data: result,\n        loading: false,\n        error: null,\n      });\n    } catch (error) {\n      setState({\n        data: null,\n        loading: false,\n        error: error instanceof Error ? error.message : \"An error occurred\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (token !== null) {\n      // Only fetch when auth state is determined\n      fetchData();\n    }\n  }, [token, ...dependencies]);\n\n  return {\n    ...state,\n    refetch: fetchData,\n  };\n}\n\nexport function useAsyncAction<T = any>() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { token } = useAuth();\n\n  const execute = async (action: () => Promise<T>): Promise<T | null> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Set the auth token for API requests\n      if (token) {\n        apiService.setToken(token);\n      }\n\n      const result = await action();\n      return result;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : \"An error occurred\";\n      setError(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    loading,\n    error,\n    execute,\n  };\n}\n"],"version":3}