{"version":3,"names":["cov_287bhnbzbq","actualCoverage","s","exports","default","PromptCoach","react_1","require","outline_1","promptContent","intention","contextDetails","onSuggestionApply","className","b","f","suggestions","setSuggestions","useState","dismissedSuggestions","setDismissedSuggestions","Set","isExpanded","setIsExpanded","useEffect","trim","newSuggestions","toLowerCase","includes","push","id","type","title","description","example","priority","length","hasVariables","test","filteredSuggestions","filter","has","handleDismissSuggestion","suggestionId","prev","handleApplySuggestion","suggestion","getPriorityColor","getTypeIcon","jsx_runtime_1","jsxs","children","jsx","CheckIcon","onClick","LightBulbIcon","map","XMarkIcon"],"sources":["/Users/vedprakashmishra/sutra/src/components/prompt/PromptCoach.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  LightBulbIcon,\n  XMarkIcon,\n  CheckIcon,\n} from \"@heroicons/react/24/outline\";\n\ninterface PromptCoachProps {\n  promptContent: string;\n  intention: string;\n  contextDetails: Record<string, any>;\n  onSuggestionApply?: (suggestion: string) => void;\n  className?: string;\n}\n\ninterface Suggestion {\n  id: string;\n  type: \"structure\" | \"clarity\" | \"specificity\" | \"examples\" | \"format\";\n  title: string;\n  description: string;\n  example?: string;\n  priority: \"high\" | \"medium\" | \"low\";\n}\n\nexport default function PromptCoach({\n  promptContent,\n  intention,\n  contextDetails,\n  onSuggestionApply,\n  className = \"\",\n}: PromptCoachProps) {\n  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n  const [dismissedSuggestions, setDismissedSuggestions] = useState<Set<string>>(\n    new Set(),\n  );\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  // Analyze prompt and generate suggestions\n  useEffect(() => {\n    if (!promptContent.trim()) {\n      setSuggestions([]);\n      return;\n    }\n\n    const newSuggestions: Suggestion[] = [];\n\n    // Check for role specification\n    if (\n      !promptContent.toLowerCase().includes(\"act as\") &&\n      !promptContent.toLowerCase().includes(\"you are\")\n    ) {\n      newSuggestions.push({\n        id: \"add-role\",\n        type: \"structure\",\n        title: \"Add Role Specification\",\n        description:\n          'Start with \"Act as [role]\" to set clear context for the AI',\n        example: \"Act as a professional marketing copywriter...\",\n        priority: \"high\",\n      });\n    }\n\n    // Check for specific instructions\n    if (promptContent.length < 50) {\n      newSuggestions.push({\n        id: \"add-details\",\n        type: \"specificity\",\n        title: \"Add More Specific Instructions\",\n        description: \"Provide more detailed requirements for better results\",\n        example:\n          \"Include specific tone, format, length, and key points to cover\",\n        priority: \"high\",\n      });\n    }\n\n    // Check for examples\n    if (\n      !promptContent.toLowerCase().includes(\"example\") &&\n      !promptContent.includes(\"like this:\")\n    ) {\n      newSuggestions.push({\n        id: \"add-examples\",\n        type: \"examples\",\n        title: \"Include Examples\",\n        description: \"Add examples to clarify the expected output format\",\n        example: 'For example: \"Subject: Welcome to our premium service\"',\n        priority: \"medium\",\n      });\n    }\n\n    // Check for output format specification\n    if (\n      !promptContent.toLowerCase().includes(\"format\") &&\n      !promptContent.toLowerCase().includes(\"structure\")\n    ) {\n      newSuggestions.push({\n        id: \"specify-format\",\n        type: \"format\",\n        title: \"Specify Output Format\",\n        description:\n          \"Define the desired output structure (bullet points, paragraphs, etc.)\",\n        example: \"Format the response as a bulleted list with clear headings\",\n        priority: \"medium\",\n      });\n    }\n\n    // Check for variables usage\n    const hasVariables = /\\{\\{.*?\\}\\}/.test(promptContent);\n    if (!hasVariables && intention.toLowerCase().includes(\"template\")) {\n      newSuggestions.push({\n        id: \"add-variables\",\n        type: \"specificity\",\n        title: \"Use Variables for Reusability\",\n        description: \"Add {{variables}} to make this prompt reusable\",\n        example: \"Write about {{product_name}} for {{target_audience}}\",\n        priority: \"medium\",\n      });\n    }\n\n    // Check for step-by-step instructions\n    if (\n      intention.toLowerCase().includes(\"complex\") ||\n      intention.toLowerCase().includes(\"detailed\")\n    ) {\n      if (\n        !promptContent.toLowerCase().includes(\"step\") &&\n        !promptContent.toLowerCase().includes(\"first\")\n      ) {\n        newSuggestions.push({\n          id: \"add-steps\",\n          type: \"structure\",\n          title: \"Use Step-by-Step Approach\",\n          description: \"Break down complex tasks into clear steps\",\n          example:\n            \"Follow these steps: 1) Analyze the requirements, 2) Draft the content, 3) Review and refine\",\n          priority: \"medium\",\n        });\n      }\n    }\n\n    // Check for constraints\n    if (\n      !promptContent.toLowerCase().includes(\"limit\") &&\n      !promptContent.toLowerCase().includes(\"words\") &&\n      !promptContent.toLowerCase().includes(\"length\")\n    ) {\n      newSuggestions.push({\n        id: \"add-constraints\",\n        type: \"clarity\",\n        title: \"Set Clear Constraints\",\n        description: \"Specify length, word count, or other limitations\",\n        example: \"Keep the response under 200 words and use professional tone\",\n        priority: \"low\",\n      });\n    }\n\n    // Filter out dismissed suggestions\n    const filteredSuggestions = newSuggestions.filter(\n      (s) => !dismissedSuggestions.has(s.id),\n    );\n    setSuggestions(filteredSuggestions);\n  }, [promptContent, intention, contextDetails, dismissedSuggestions]);\n\n  const handleDismissSuggestion = (suggestionId: string) => {\n    setDismissedSuggestions((prev) => new Set([...prev, suggestionId]));\n  };\n\n  const handleApplySuggestion = (suggestion: Suggestion) => {\n    if (onSuggestionApply && suggestion.example) {\n      onSuggestionApply(suggestion.example);\n    }\n    handleDismissSuggestion(suggestion.id);\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"high\":\n        return \"text-red-600 bg-red-50 border-red-200\";\n      case \"medium\":\n        return \"text-yellow-600 bg-yellow-50 border-yellow-200\";\n      case \"low\":\n        return \"text-green-600 bg-green-50 border-green-200\";\n      default:\n        return \"text-gray-600 bg-gray-50 border-gray-200\";\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case \"structure\":\n        return \"üèóÔ∏è\";\n      case \"clarity\":\n        return \"üîç\";\n      case \"specificity\":\n        return \"üéØ\";\n      case \"examples\":\n        return \"üí°\";\n      case \"format\":\n        return \"üìÑ\";\n      default:\n        return \"üí≠\";\n    }\n  };\n\n  if (suggestions.length === 0) {\n    return (\n      <div\n        className={`bg-green-50 border border-green-200 rounded-lg p-4 ${className}`}\n      >\n        <div className=\"flex items-center space-x-2\">\n          <CheckIcon className=\"h-5 w-5 text-green-600\" />\n          <span className=\"text-green-800 font-medium\">\n            Great prompt structure!\n          </span>\n        </div>\n        <p className=\"text-green-700 text-sm mt-1\">\n          Your prompt follows best practices.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg ${className}`}>\n      <div\n        className=\"flex items-center justify-between p-3 cursor-pointer border-b border-gray-200\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex items-center space-x-2\">\n          <LightBulbIcon className=\"h-5 w-5 text-blue-600\" />\n          <span className=\"font-medium text-gray-900\">PromptCoach</span>\n          <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n            {suggestions.length} suggestion{suggestions.length !== 1 ? \"s\" : \"\"}\n          </span>\n        </div>\n        <div className=\"text-gray-400\">{isExpanded ? \"‚àí\" : \"+\"}</div>\n      </div>\n\n      {isExpanded && (\n        <div className=\"p-3 space-y-3\">\n          {suggestions.map((suggestion) => (\n            <div\n              key={suggestion.id}\n              className={`border rounded-lg p-3 ${getPriorityColor(suggestion.priority)}`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <span className=\"text-sm\">\n                      {getTypeIcon(suggestion.type)}\n                    </span>\n                    <h4 className=\"font-medium text-sm\">{suggestion.title}</h4>\n                    <span className=\"text-xs uppercase font-medium px-2 py-1 rounded bg-white bg-opacity-50\">\n                      {suggestion.priority}\n                    </span>\n                  </div>\n                  <p className=\"text-sm opacity-80 mb-2\">\n                    {suggestion.description}\n                  </p>\n                  {suggestion.example && (\n                    <div className=\"bg-white bg-opacity-50 rounded p-2 text-xs font-mono\">\n                      {suggestion.example}\n                    </div>\n                  )}\n                </div>\n                <div className=\"flex space-x-1 ml-2\">\n                  {suggestion.example && onSuggestionApply && (\n                    <button\n                      onClick={() => handleApplySuggestion(suggestion)}\n                      className=\"p-1 hover:bg-white hover:bg-opacity-50 rounded\"\n                      title=\"Apply suggestion\"\n                    >\n                      <CheckIcon className=\"h-4 w-4\" />\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDismissSuggestion(suggestion.id)}\n                    className=\"p-1 hover:bg-white hover:bg-opacity-50 rounded\"\n                    title=\"Dismiss suggestion\"\n                  >\n                    <XMarkIcon className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"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","ignoreList":[]}