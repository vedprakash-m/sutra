6d622ec78b078f3972c3b55e7d6b79ed
/* istanbul ignore next */
function cov_h8be3fdy8() {
  var path = "/Users/vedprakashmishra/sutra/src/components/collections/CollectionsPage.tsx";
  var hash = "9280cc5c114141fdfdc923a8f4e02983814ff3b1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/vedprakashmishra/sutra/src/components/collections/CollectionsPage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "1": {
        start: {
          line: 11,
          column: 40
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "2": {
        start: {
          line: 12,
          column: 58
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "3": {
        start: {
          line: 17,
          column: 50
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "4": {
        start: {
          line: 19,
          column: 64
        },
        end: {
          line: 19,
          column: 135
        }
      },
      "5": {
        start: {
          line: 19,
          column: 77
        },
        end: {
          line: 19,
          column: 120
        }
      },
      "6": {
        start: {
          line: 20,
          column: 35
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "8": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "9": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 55
        }
      },
      "10": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 22
        }
      },
      "11": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 63
        }
      },
      "12": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "13": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "14": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 68,
          column: 26
        }
      },
      "15": {
        start: {
          line: 38,
          column: 509
        },
        end: {
          line: 38,
          column: 533
        }
      },
      "16": {
        start: {
          line: 38,
          column: 1104
        },
        end: {
          line: 38,
          column: 1133
        }
      },
      "17": {
        start: {
          line: 38,
          column: 1861
        },
        end: {
          line: 42,
          column: 156
        }
      },
      "18": {
        start: {
          line: 38,
          column: 3204
        },
        end: {
          line: 42,
          column: 46
        }
      },
      "19": {
        start: {
          line: 42,
          column: 1416
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "20": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "21": {
        start: {
          line: 49,
          column: 82
        },
        end: {
          line: 49,
          column: 107
        }
      },
      "22": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 50,
          column: 63
        }
      },
      "23": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 66,
          column: 23
        }
      },
      "24": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "25": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "26": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 64,
          column: 76
        }
      },
      "27": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "CollectionsPage",
        decl: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 39
          }
        },
        loc: {
          start: {
            line: 9,
            column: 42
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 71
          },
          end: {
            line: 19,
            column: 72
          }
        },
        loc: {
          start: {
            line: 19,
            column: 77
          },
          end: {
            line: 19,
            column: 120
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 35
          },
          end: {
            line: 20,
            column: 36
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 24
          }
        },
        loc: {
          start: {
            line: 35,
            column: 39
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 503
          },
          end: {
            line: 38,
            column: 504
          }
        },
        loc: {
          start: {
            line: 38,
            column: 509
          },
          end: {
            line: 38,
            column: 533
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 1097
          },
          end: {
            line: 38,
            column: 1098
          }
        },
        loc: {
          start: {
            line: 38,
            column: 1104
          },
          end: {
            line: 38,
            column: 1133
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 1844
          },
          end: {
            line: 38,
            column: 1845
          }
        },
        loc: {
          start: {
            line: 38,
            column: 1861
          },
          end: {
            line: 42,
            column: 156
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 38,
            column: 3198
          },
          end: {
            line: 38,
            column: 3199
          }
        },
        loc: {
          start: {
            line: 38,
            column: 3204
          },
          end: {
            line: 42,
            column: 46
          }
        },
        line: 38
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 1410
          },
          end: {
            line: 42,
            column: 1411
          }
        },
        loc: {
          start: {
            line: 42,
            column: 1416
          },
          end: {
            line: 46,
            column: 18
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 46,
            column: 122
          },
          end: {
            line: 46,
            column: 123
          }
        },
        loc: {
          start: {
            line: 46,
            column: 137
          },
          end: {
            line: 49,
            column: 17
          }
        },
        line: 46
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 49,
            column: 76
          },
          end: {
            line: 49,
            column: 77
          }
        },
        loc: {
          start: {
            line: 49,
            column: 82
          },
          end: {
            line: 49,
            column: 107
          }
        },
        line: 49
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 49,
            column: 119
          },
          end: {
            line: 49,
            column: 120
          }
        },
        loc: {
          start: {
            line: 49,
            column: 132
          },
          end: {
            line: 68,
            column: 17
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 53,
            column: 36
          },
          end: {
            line: 53,
            column: 37
          }
        },
        loc: {
          start: {
            line: 53,
            column: 54
          },
          end: {
            line: 66,
            column: 21
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 34
          }
        }, {
          start: {
            line: 26,
            column: 38
          },
          end: {
            line: 26,
            column: 48
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 1271
          },
          end: {
            line: 38,
            column: 1529
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 1271
          },
          end: {
            line: 38,
            column: 1278
          }
        }, {
          start: {
            line: 38,
            column: 1283
          },
          end: {
            line: 38,
            column: 1528
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 1531
          },
          end: {
            line: 38,
            column: 1698
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 1531
          },
          end: {
            line: 38,
            column: 1536
          }
        }, {
          start: {
            line: 38,
            column: 1541
          },
          end: {
            line: 38,
            column: 1697
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 1700
          },
          end: {
            line: 42,
            column: 1340
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 1700
          },
          end: {
            line: 38,
            column: 1708
          }
        }, {
          start: {
            line: 38,
            column: 1712
          },
          end: {
            line: 38,
            column: 1718
          }
        }, {
          start: {
            line: 38,
            column: 1723
          },
          end: {
            line: 42,
            column: 1339
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 2750
          },
          end: {
            line: 38,
            column: 2778
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 2750
          },
          end: {
            line: 38,
            column: 2773
          }
        }, {
          start: {
            line: 38,
            column: 2777
          },
          end: {
            line: 38,
            column: 2778
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 160
          },
          end: {
            line: 42,
            column: 395
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 160
          },
          end: {
            line: 42,
            column: 196
          }
        }, {
          start: {
            line: 42,
            column: 201
          },
          end: {
            line: 42,
            column: 394
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 57,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 57,
            column: 63
          }
        }, {
          start: {
            line: 57,
            column: 67
          },
          end: {
            line: 57,
            column: 84
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 59,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 59,
            column: 50
          }
        }, {
          start: {
            line: 59,
            column: 54
          },
          end: {
            line: 59,
            column: 64
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/vedprakashmishra/sutra/src/components/collections/CollectionsPage.tsx",
      mappings: "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",
      names: [],
      sources: ["/Users/vedprakashmishra/sutra/src/components/collections/CollectionsPage.tsx"],
      sourcesContent: ["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"@/components/auth/AuthProvider\";\nimport { useApi } from \"@/hooks/useApi\";\nimport { collectionsApi } from \"@/services/api\";\nimport VersionHistory from \"./VersionHistory\";\nimport ImportModal from \"./ImportModal\";\n\nexport default function CollectionsPage() {\n  const { user } = useAuth();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [versionHistoryModal, setVersionHistoryModal] = useState<{\n    isOpen: boolean;\n    promptId: string;\n    promptName: string;\n  }>({\n    isOpen: false,\n    promptId: \"\",\n    promptName: \"\",\n  });\n  const [importModalOpen, setImportModalOpen] = useState(false);\n\n  // Fetch collections from API\n  const {\n    data: collectionsData,\n    loading,\n    error,\n    refetch,\n  } = useApi(() => collectionsApi.list({ search: searchTerm }), [searchTerm]);\n\n  const handleCreateCollection = async () => {\n    try {\n      const newCollection = {\n        name: \"New Collection\",\n        description: \"A new collection for organizing prompts\",\n        type: \"private\" as const,\n        owner_id: user?.id || \"dev-user\",\n      };\n      await collectionsApi.create(newCollection);\n      refetch();\n    } catch (error) {\n      console.error(\"Error creating collection:\", error);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n      <div className=\"mb-8 flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Collections</h1>\n          <p className=\"mt-1 text-sm text-gray-600\">\n            Organize and manage your prompt collections\n          </p>\n        </div>\n        <div className=\"flex space-x-3\">\n          <button\n            type=\"button\"\n            onClick={() => setImportModalOpen(true)}\n            className=\"bg-white text-gray-700 py-2 px-4 rounded-md border border-gray-300 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          >\n            Import Prompts\n          </button>\n          <button\n            type=\"button\"\n            onClick={handleCreateCollection}\n            className=\"bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n          >\n            New Collection\n          </button>\n        </div>\n      </div>\n\n      {/* Search Bar */}\n      <div className=\"mb-6\">\n        <input\n          type=\"text\"\n          placeholder=\"Search collections...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"block w-full max-w-md border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n        />\n      </div>\n\n      {/* Loading State */}\n      {loading && (\n        <div className=\"text-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto\"></div>\n          <p className=\"mt-2 text-gray-600\">Loading collections...</p>\n        </div>\n      )}\n\n      {/* Error State */}\n      {error && (\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600\">\n            Error loading collections. Please try again.\n          </p>\n        </div>\n      )}\n\n      {/* Collections Grid */}\n      {!loading && !error && (\n        <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {collectionsData?.items?.map((collection) => (\n            <div\n              key={collection.id}\n              className=\"bg-white overflow-hidden shadow rounded-lg\"\n            >\n              <div className=\"p-5\">\n                <div className=\"flex items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center\">\n                      <span className=\"text-white text-sm font-medium\">\n                        {collection.name.charAt(0)}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"ml-5 w-0 flex-1\">\n                    <dl>\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                        {collection.name}\n                      </dt>\n                      <dd className=\"text-sm text-gray-900\">\n                        {collection.description}\n                      </dd>\n                    </dl>\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                    <span>{collection.prompt_count || 0} prompts</span>\n                    <span>Updated {formatDate(collection.updated_at)}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"bg-gray-50 px-5 py-3\">\n                <div className=\"flex justify-between items-center text-sm\">\n                  <Link\n                    to={`/collections/${collection.id}`}\n                    className=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                  >\n                    View collection\n                  </Link>\n                  <button\n                    onClick={() =>\n                      setVersionHistoryModal({\n                        isOpen: true,\n                        promptId: collection.id,\n                        promptName: collection.name,\n                      })\n                    }\n                    className=\"font-medium text-gray-600 hover:text-gray-900\"\n                  >\n                    History\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n\n          {/* Empty state when no collections */}\n          {collectionsData?.items?.length === 0 && (\n            <div className=\"col-span-full text-center py-8\">\n              <p className=\"text-gray-500\">\n                No collections found. Create your first collection to get\n                started!\n              </p>\n            </div>\n          )}\n\n          {/* Create New Collection Card */}\n          <div className=\"bg-white overflow-hidden shadow rounded-lg border-2 border-dashed border-gray-300\">\n            <div className=\"p-5\">\n              <div className=\"text-center\">\n                <div className=\"w-8 h-8 bg-gray-400 rounded-md flex items-center justify-center mx-auto\">\n                  <span className=\"text-white text-sm font-medium\">+</span>\n                </div>\n                <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\n                  Create new collection\n                </h3>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Get started by creating a new prompt collection\n                </p>\n                <div className=\"mt-3\">\n                  <button\n                    type=\"button\"\n                    onClick={handleCreateCollection}\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\"\n                  >\n                    New Collection\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Version History Modal */}\n      <VersionHistory\n        isOpen={versionHistoryModal.isOpen}\n        onClose={() =>\n          setVersionHistoryModal({\n            isOpen: false,\n            promptId: \"\",\n            promptName: \"\",\n          })\n        }\n        promptId={versionHistoryModal.promptId}\n        promptName={versionHistoryModal.promptName}\n        onVersionRestore={(versionId) => {\n          console.log(\"Restoring version:\", versionId);\n          // TODO: Implement version restore logic\n        }}\n      />\n\n      {/* Import Modal */}\n      <ImportModal\n        isOpen={importModalOpen}\n        onClose={() => setImportModalOpen(false)}\n        onImport={(prompts) => {\n          console.log(\"Importing prompts:\", prompts);\n          // TODO: Implement actual import logic\n          // Create collections for each imported prompt\n          prompts.forEach(async (prompt) => {\n            try {\n              await collectionsApi.create({\n                name: prompt.title,\n                description: prompt.description || \"Imported prompt\",\n                type: \"private\" as const,\n                owner_id: user?.id || \"dev-user\",\n                tags: [\"imported\", prompt.source.toLowerCase()],\n              });\n            } catch (error) {\n              console.error(\"Error importing prompt:\", error);\n            }\n          });\n          refetch(); // Refresh the collections list\n        }}\n      />\n    </div>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9280cc5c114141fdfdc923a8f4e02983814ff3b1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h8be3fdy8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h8be3fdy8();
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Link } from "react-router-dom";
import { useAuth } from "@/components/auth/AuthProvider";
import { useApi } from "@/hooks/useApi";
import { collectionsApi } from "@/services/api";
import VersionHistory from "./VersionHistory";
import ImportModal from "./ImportModal";
export default function CollectionsPage() {
  /* istanbul ignore next */
  cov_h8be3fdy8().f[0]++;
  const {
    user
  } =
  /* istanbul ignore next */
  (cov_h8be3fdy8().s[0]++, useAuth());
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_h8be3fdy8().s[1]++, useState(""));
  const [versionHistoryModal, setVersionHistoryModal] =
  /* istanbul ignore next */
  (cov_h8be3fdy8().s[2]++, useState({
    isOpen: false,
    promptId: "",
    promptName: ""
  }));
  const [importModalOpen, setImportModalOpen] =
  /* istanbul ignore next */
  (cov_h8be3fdy8().s[3]++, useState(false));
  // Fetch collections from API
  const {
    data: collectionsData,
    loading,
    error,
    refetch
  } =
  /* istanbul ignore next */
  (cov_h8be3fdy8().s[4]++, useApi(() => {
    /* istanbul ignore next */
    cov_h8be3fdy8().f[1]++;
    cov_h8be3fdy8().s[5]++;
    return collectionsApi.list({
      search: searchTerm
    });
  }, [searchTerm]));
  /* istanbul ignore next */
  cov_h8be3fdy8().s[6]++;
  const handleCreateCollection = async () => {
    /* istanbul ignore next */
    cov_h8be3fdy8().f[2]++;
    cov_h8be3fdy8().s[7]++;
    try {
      const newCollection =
      /* istanbul ignore next */
      (cov_h8be3fdy8().s[8]++, {
        name: "New Collection",
        description: "A new collection for organizing prompts",
        type: "private",
        owner_id:
        /* istanbul ignore next */
        (cov_h8be3fdy8().b[0][0]++, user?.id) ||
        /* istanbul ignore next */
        (cov_h8be3fdy8().b[0][1]++, "dev-user")
      });
      /* istanbul ignore next */
      cov_h8be3fdy8().s[9]++;
      await collectionsApi.create(newCollection);
      /* istanbul ignore next */
      cov_h8be3fdy8().s[10]++;
      refetch();
    } catch (error) {
      /* istanbul ignore next */
      cov_h8be3fdy8().s[11]++;
      console.error("Error creating collection:", error);
    }
  };
  /* istanbul ignore next */
  cov_h8be3fdy8().s[12]++;
  const formatDate = dateString => {
    /* istanbul ignore next */
    cov_h8be3fdy8().f[3]++;
    cov_h8be3fdy8().s[13]++;
    return new Date(dateString).toLocaleDateString();
  };
  /* istanbul ignore next */
  cov_h8be3fdy8().s[14]++;
  return _jsxs("div", {
    className: "max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8",
    children: [_jsxs("div", {
      className: "mb-8 flex justify-between items-center",
      children: [_jsxs("div", {
        children: [_jsx("h1", {
          className: "text-2xl font-bold text-gray-900",
          children: "Collections"
        }), _jsx("p", {
          className: "mt-1 text-sm text-gray-600",
          children: "Organize and manage your prompt collections"
        })]
      }), _jsxs("div", {
        className: "flex space-x-3",
        children: [_jsx("button", {
          type: "button",
          onClick: () => {
            /* istanbul ignore next */
            cov_h8be3fdy8().f[4]++;
            cov_h8be3fdy8().s[15]++;
            return setImportModalOpen(true);
          },
          className: "bg-white text-gray-700 py-2 px-4 rounded-md border border-gray-300 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500",
          children: "Import Prompts"
        }), _jsx("button", {
          type: "button",
          onClick: handleCreateCollection,
          className: "bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500",
          children: "New Collection"
        })]
      })]
    }), _jsx("div", {
      className: "mb-6",
      children: _jsx("input", {
        type: "text",
        placeholder: "Search collections...",
        value: searchTerm,
        onChange: e => {
          /* istanbul ignore next */
          cov_h8be3fdy8().f[5]++;
          cov_h8be3fdy8().s[16]++;
          return setSearchTerm(e.target.value);
        },
        className: "block w-full max-w-md border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
      })
    }),
    /* istanbul ignore next */
    (cov_h8be3fdy8().b[1][0]++, loading) &&
    /* istanbul ignore next */
    (cov_h8be3fdy8().b[1][1]++, _jsxs("div", {
      className: "text-center py-8",
      children: [_jsx("div", {
        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto"
      }), _jsx("p", {
        className: "mt-2 text-gray-600",
        children: "Loading collections..."
      })]
    })),
    /* istanbul ignore next */
    (cov_h8be3fdy8().b[2][0]++, error) &&
    /* istanbul ignore next */
    (cov_h8be3fdy8().b[2][1]++, _jsx("div", {
      className: "text-center py-8",
      children: _jsx("p", {
        className: "text-red-600",
        children: "Error loading collections. Please try again."
      })
    })),
    /* istanbul ignore next */
    (cov_h8be3fdy8().b[3][0]++, !loading) &&
    /* istanbul ignore next */
    (cov_h8be3fdy8().b[3][1]++, !error) &&
    /* istanbul ignore next */
    (cov_h8be3fdy8().b[3][2]++, _jsxs("div", {
      className: "grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3",
      children: [collectionsData?.items?.map(collection => {
        /* istanbul ignore next */
        cov_h8be3fdy8().f[6]++;
        cov_h8be3fdy8().s[17]++;
        return _jsxs("div", {
          className: "bg-white overflow-hidden shadow rounded-lg",
          children: [_jsxs("div", {
            className: "p-5",
            children: [_jsxs("div", {
              className: "flex items-center",
              children: [_jsx("div", {
                className: "flex-shrink-0",
                children: _jsx("div", {
                  className: "w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center",
                  children: _jsx("span", {
                    className: "text-white text-sm font-medium",
                    children: collection.name.charAt(0)
                  })
                })
              }), _jsx("div", {
                className: "ml-5 w-0 flex-1",
                children: _jsxs("dl", {
                  children: [_jsx("dt", {
                    className: "text-sm font-medium text-gray-500 truncate",
                    children: collection.name
                  }), _jsx("dd", {
                    className: "text-sm text-gray-900",
                    children: collection.description
                  })]
                })
              })]
            }), _jsx("div", {
              className: "mt-4",
              children: _jsxs("div", {
                className: "flex items-center justify-between text-sm text-gray-500",
                children: [_jsxs("span", {
                  children: [
                  /* istanbul ignore next */
                  (cov_h8be3fdy8().b[4][0]++, collection.prompt_count) ||
                  /* istanbul ignore next */
                  (cov_h8be3fdy8().b[4][1]++, 0), " prompts"]
                }), _jsxs("span", {
                  children: ["Updated ", formatDate(collection.updated_at)]
                })]
              })
            })]
          }), _jsx("div", {
            className: "bg-gray-50 px-5 py-3",
            children: _jsxs("div", {
              className: "flex justify-between items-center text-sm",
              children: [_jsx(Link, {
                to: `/collections/${collection.id}`,
                className: "font-medium text-indigo-700 hover:text-indigo-900",
                children: "View collection"
              }), _jsx("button", {
                onClick: () => {
                  /* istanbul ignore next */
                  cov_h8be3fdy8().f[7]++;
                  cov_h8be3fdy8().s[18]++;
                  return setVersionHistoryModal({
                    isOpen: true,
                    promptId: collection.id,
                    promptName: collection.name
                  });
                },
                className: "font-medium text-gray-600 hover:text-gray-900",
                children: "History"
              })]
            })
          })]
        }, collection.id);
      }),
      /* istanbul ignore next */
      (cov_h8be3fdy8().b[5][0]++, collectionsData?.items?.length === 0) &&
      /* istanbul ignore next */
      (cov_h8be3fdy8().b[5][1]++, _jsx("div", {
        className: "col-span-full text-center py-8",
        children: _jsx("p", {
          className: "text-gray-500",
          children: "No collections found. Create your first collection to get started!"
        })
      })), _jsx("div", {
        className: "bg-white overflow-hidden shadow rounded-lg border-2 border-dashed border-gray-300",
        children: _jsx("div", {
          className: "p-5",
          children: _jsxs("div", {
            className: "text-center",
            children: [_jsx("div", {
              className: "w-8 h-8 bg-gray-400 rounded-md flex items-center justify-center mx-auto",
              children: _jsx("span", {
                className: "text-white text-sm font-medium",
                children: "+"
              })
            }), _jsx("h3", {
              className: "mt-2 text-sm font-medium text-gray-900",
              children: "Create new collection"
            }), _jsx("p", {
              className: "mt-1 text-sm text-gray-500",
              children: "Get started by creating a new prompt collection"
            }), _jsx("div", {
              className: "mt-3",
              children: _jsx("button", {
                type: "button",
                onClick: handleCreateCollection,
                className: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700",
                children: "New Collection"
              })
            })]
          })
        })
      })]
    })), _jsx(VersionHistory, {
      isOpen: versionHistoryModal.isOpen,
      onClose: () => {
        /* istanbul ignore next */
        cov_h8be3fdy8().f[8]++;
        cov_h8be3fdy8().s[19]++;
        return setVersionHistoryModal({
          isOpen: false,
          promptId: "",
          promptName: ""
        });
      },
      promptId: versionHistoryModal.promptId,
      promptName: versionHistoryModal.promptName,
      onVersionRestore: versionId => {
        /* istanbul ignore next */
        cov_h8be3fdy8().f[9]++;
        cov_h8be3fdy8().s[20]++;
        console.log("Restoring version:", versionId);
        // TODO: Implement version restore logic
      }
    }), _jsx(ImportModal, {
      isOpen: importModalOpen,
      onClose: () => {
        /* istanbul ignore next */
        cov_h8be3fdy8().f[10]++;
        cov_h8be3fdy8().s[21]++;
        return setImportModalOpen(false);
      },
      onImport: prompts => {
        /* istanbul ignore next */
        cov_h8be3fdy8().f[11]++;
        cov_h8be3fdy8().s[22]++;
        console.log("Importing prompts:", prompts);
        // TODO: Implement actual import logic
        // Create collections for each imported prompt
        /* istanbul ignore next */
        cov_h8be3fdy8().s[23]++;
        prompts.forEach(async prompt => {
          /* istanbul ignore next */
          cov_h8be3fdy8().f[12]++;
          cov_h8be3fdy8().s[24]++;
          try {
            /* istanbul ignore next */
            cov_h8be3fdy8().s[25]++;
            await collectionsApi.create({
              name: prompt.title,
              description:
              /* istanbul ignore next */
              (cov_h8be3fdy8().b[6][0]++, prompt.description) ||
              /* istanbul ignore next */
              (cov_h8be3fdy8().b[6][1]++, "Imported prompt"),
              type: "private",
              owner_id:
              /* istanbul ignore next */
              (cov_h8be3fdy8().b[7][0]++, user?.id) ||
              /* istanbul ignore next */
              (cov_h8be3fdy8().b[7][1]++, "dev-user"),
              tags: ["imported", prompt.source.toLowerCase()]
            });
          } catch (error) {
            /* istanbul ignore next */
            cov_h8be3fdy8().s[26]++;
            console.error("Error importing prompt:", error);
          }
        });
        /* istanbul ignore next */
        cov_h8be3fdy8().s[27]++;
        refetch(); // Refresh the collections list
      }
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,