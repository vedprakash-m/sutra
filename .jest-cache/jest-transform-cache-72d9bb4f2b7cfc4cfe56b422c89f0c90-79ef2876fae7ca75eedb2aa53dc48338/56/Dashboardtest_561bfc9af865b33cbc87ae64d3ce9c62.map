{"file":"/Users/vedprakashmishra/sutra/src/components/dashboard/Dashboard.test.tsx","mappings":";;;;;;AAMA,wDAAwD;AACxD,IAAI,CAAC,IAAI,CAAC,gCAAgC,EAAE,GAAG,EAAE,CAAC,CAAC;IACjD,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE,CAAC,CAC7D,0CAAM,QAAQ,GAAO,CACtB;IACD,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;QACd,IAAI,EAAE,IAAI;QACV,eAAe,EAAE,KAAK;QACtB,SAAS,EAAE,KAAK;QAChB,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;QAChB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;QACjB,OAAO,EAAE,KAAK;KACf,CAAC;CACH,CAAC,CAAC,CAAC;AAnBJ,kDAA0B;AAC1B,kDAAwD;AACxD,uDAAiD;AACjD,iEAA8D;AAC9D,iFAAyD;AAiBzD,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE;QAC9D,IAAA,cAAM,EACJ,uBAAC,gCAAa,cACZ,uBAAC,2BAAY,cACX,uBAAC,mBAAS,KAAG,GACA,GACD,CACjB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACjE,MAAM,CACJ,cAAM,CAAC,SAAS,CACd,0DAA0D,CAC3D,CACF,CAAC,iBAAiB,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/vedprakashmishra/sutra/src/components/dashboard/Dashboard.test.tsx"],"sourcesContent":["import React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthProvider } from \"@/components/auth/AuthProvider\";\nimport Dashboard from \"@/components/dashboard/Dashboard\";\n\n// Mock the useAuth hook to return unauthenticated state\njest.mock(\"@/components/auth/AuthProvider\", () => ({\n  AuthProvider: ({ children }: { children: React.ReactNode }) => (\n    <div>{children}</div>\n  ),\n  useAuth: () => ({\n    user: null,\n    isAuthenticated: false,\n    isLoading: false,\n    login: jest.fn(),\n    logout: jest.fn(),\n    isAdmin: false,\n  }),\n}));\n\ndescribe(\"Dashboard\", () => {\n  it(\"should render welcome message when not authenticated\", () => {\n    render(\n      <BrowserRouter>\n        <AuthProvider>\n          <Dashboard />\n        </AuthProvider>\n      </BrowserRouter>,\n    );\n\n    expect(screen.getByText(\"Welcome to Sutra\")).toBeInTheDocument();\n    expect(\n      screen.getByText(\n        \"AI Operations Platform for systematic prompt engineering\",\n      ),\n    ).toBeInTheDocument();\n  });\n});\n"],"version":3}