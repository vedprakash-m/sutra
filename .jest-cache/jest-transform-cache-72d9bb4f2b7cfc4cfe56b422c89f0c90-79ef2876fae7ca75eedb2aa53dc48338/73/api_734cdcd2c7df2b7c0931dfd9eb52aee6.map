{"version":3,"names":["API_BASE_URL","cov_1vvgyvalup","s","b","import","meta","env","VITE_API_URL","NODE_ENV","ApiService","constructor","baseUrl","f","Object","defineProperty","getAuthToken","then","token","setToken","catch","response","fetch","ok","authInfo","json","clientPrincipal","accessToken","error","console","debug","getHeaders","headers","handleResponse","errorMessage","status","window","location","href","Error","errorData","message","e","get","endpoint","params","url","URL","entries","forEach","key","value","undefined","searchParams","append","String","toString","method","post","data","body","JSON","stringify","put","delete","exports","apiService","collectionsApi","list","id","create","collection","update","playbooksApi","playbook","execute","variables","integrationsApi","listLLM","saveLLM","provider","integration","deleteLLM","adminApi","getLLMSettings","updateLLMSettings","settings","getSystemHealth","getUsageStats","llmApi","promptText","model","default"],"sources":["/Users/vedprakashmishra/sutra/src/services/api.ts"],"sourcesContent":["// API Configuration - Direct access to Azure Functions (No Gateway)\nconst API_BASE_URL =\n  import.meta.env.VITE_API_URL ||\n  (import.meta.env.NODE_ENV === \"development\"\n    ? \"http://localhost:7075/api\"\n    : \"https://sutra-api.azurewebsites.net/api\");\n\nexport interface ApiResponse<T = any> {\n  data?: T;\n  error?: string;\n  message?: string;\n  timestamp?: string;\n}\n\nexport interface PaginatedResponse<T> {\n  items: T[];\n  pagination: {\n    current_page: number;\n    total_pages: number;\n    total_count: number;\n    limit: number;\n    has_next: boolean;\n    has_prev: boolean;\n  };\n}\n\nclass ApiService {\n  private baseUrl: string;\n  private token: string | null = null;\n\n  // Initialize with auth token on construction\n  constructor(baseUrl: string = API_BASE_URL) {\n    this.baseUrl = baseUrl;\n    // Try to get auth token on initialization\n    this.getAuthToken()\n      .then((token) => {\n        if (token) {\n          this.setToken(token);\n        }\n      })\n      .catch(() => {\n        // Ignore auth errors during initialization\n      });\n  }\n\n  setToken(token: string | null) {\n    this.token = token;\n  }\n\n  // Static Web App authentication integration\n  private async getAuthToken(): Promise<string | null> {\n    try {\n      // Static Web App provides auth info at /.auth/me\n      const response = await fetch(\"/.auth/me\");\n      if (response.ok) {\n        const authInfo = await response.json();\n        if (authInfo.clientPrincipal) {\n          // User is authenticated, get access token if available\n          return authInfo.clientPrincipal.accessToken || null;\n        }\n      }\n    } catch (error) {\n      console.debug(\"Auth token not available:\", error);\n    }\n    return null;\n  }\n\n  private getHeaders(): Record<string, string> {\n    const headers: Record<string, string> = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    if (this.token) {\n      headers[\"Authorization\"] = `Bearer ${this.token}`;\n    }\n\n    // Add client info for rate limiting and analytics\n    headers[\"X-Client-Name\"] = \"sutra-web\";\n    headers[\"X-Client-Version\"] = \"1.0.0\";\n\n    return headers;\n  }\n\n  // Enhanced error handling for direct access\n  private async handleResponse<T>(response: Response): Promise<T> {\n    if (!response.ok) {\n      let errorMessage = `HTTP error! status: ${response.status}`;\n\n      // Handle authentication redirects\n      if (response.status === 401) {\n        // Redirect to login if not authenticated\n        window.location.href = \"/login\";\n        throw new Error(\"Authentication required\");\n      }\n\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.message || errorData.error || errorMessage;\n      } catch (e) {\n        // If JSON parsing fails, use the default error message\n      }\n\n      throw new Error(errorMessage);\n    }\n\n    return response.json();\n  }\n\n  async get<T>(endpoint: string, params?: Record<string, any>): Promise<T> {\n    const url = new URL(`${this.baseUrl}${endpoint}`);\n\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          url.searchParams.append(key, String(value));\n        }\n      });\n    }\n\n    const response = await fetch(url.toString(), {\n      method: \"GET\",\n      headers: this.getHeaders(),\n    });\n\n    return this.handleResponse<T>(response);\n  }\n\n  async post<T>(endpoint: string, data?: any): Promise<T> {\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      method: \"POST\",\n      headers: this.getHeaders(),\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    return this.handleResponse<T>(response);\n  }\n\n  async put<T>(endpoint: string, data?: any): Promise<T> {\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      method: \"PUT\",\n      headers: this.getHeaders(),\n      body: data ? JSON.stringify(data) : undefined,\n    });\n\n    return this.handleResponse<T>(response);\n  }\n\n  async delete<T>(endpoint: string): Promise<T> {\n    const response = await fetch(`${this.baseUrl}${endpoint}`, {\n      method: \"DELETE\",\n      headers: this.getHeaders(),\n    });\n\n    return this.handleResponse<T>(response);\n  }\n}\n\n// Create singleton instance\nexport const apiService = new ApiService();\n\n// Collection related types and functions\nexport interface Collection {\n  id: string;\n  name: string;\n  description: string;\n  type: \"private\" | \"shared_team\" | \"public_marketplace\";\n  owner_id: string;\n  created_at: string;\n  updated_at: string;\n  prompt_count?: number;\n  tags?: string[];\n}\n\nexport interface Prompt {\n  id: string;\n  title: string;\n  content: string;\n  collection_id: string;\n  created_at: string;\n  updated_at: string;\n  version: number;\n  tags?: string[];\n}\n\nexport interface Playbook {\n  id: string;\n  name: string;\n  description: string;\n  steps: PlaybookStep[];\n  creator_id: string;\n  created_at: string;\n  updated_at: string;\n  visibility: \"private\" | \"shared\";\n}\n\nexport interface PlaybookStep {\n  id: string;\n  type: \"prompt\" | \"review\" | \"variable\";\n  prompt_id?: string;\n  content?: string;\n  variables?: Record<string, any>;\n  order: number;\n}\n\nexport interface LLMIntegration {\n  id: string;\n  provider: string;\n  name: string;\n  api_key: string;\n  enabled: boolean;\n  configuration: Record<string, any>;\n}\n\n// API Functions\nexport const collectionsApi = {\n  list: (params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    type?: string;\n  }) => apiService.get<PaginatedResponse<Collection>>(\"/collections\", params),\n\n  get: (id: string) => apiService.get<Collection>(`/collections/${id}`),\n\n  create: (collection: Partial<Collection>) =>\n    apiService.post<Collection>(\"/collections\", collection),\n\n  update: (id: string, collection: Partial<Collection>) =>\n    apiService.put<Collection>(`/collections/${id}`, collection),\n\n  delete: (id: string) => apiService.delete(`/collections/${id}`),\n};\n\nexport const playbooksApi = {\n  list: (params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    visibility?: string;\n  }) => apiService.get<PaginatedResponse<Playbook>>(\"/playbooks\", params),\n\n  get: (id: string) => apiService.get<Playbook>(`/playbooks/${id}`),\n\n  create: (playbook: Partial<Playbook>) =>\n    apiService.post<Playbook>(\"/playbooks\", playbook),\n\n  update: (id: string, playbook: Partial<Playbook>) =>\n    apiService.put<Playbook>(`/playbooks/${id}`, playbook),\n\n  delete: (id: string) => apiService.delete(`/playbooks/${id}`),\n\n  execute: (id: string, variables?: Record<string, any>) =>\n    apiService.post(`/playbooks/${id}/execute`, { variables }),\n};\n\nexport const integrationsApi = {\n  listLLM: () =>\n    apiService.get<{\n      integrations: Record<string, LLMIntegration>;\n      supportedProviders: any[];\n    }>(\"/integrations/llm\"),\n\n  saveLLM: (provider: string, integration: Partial<LLMIntegration>) =>\n    apiService.post(`/integrations/llm/${provider}`, integration),\n\n  deleteLLM: (provider: string) =>\n    apiService.delete(`/integrations/llm/${provider}`),\n};\n\nexport const adminApi = {\n  getLLMSettings: () => apiService.get(\"/management/llm/settings\"),\n\n  updateLLMSettings: (settings: any) =>\n    apiService.put(\"/management/llm/settings\", settings),\n\n  getSystemHealth: () => apiService.get(\"/management/system/health\"),\n\n  getUsageStats: () => apiService.get(\"/management/usage\"),\n};\n\nexport const llmApi = {\n  execute: (\n    promptText: string,\n    model: string,\n    variables?: Record<string, any>,\n  ) => apiService.post(\"/llm\", { promptText, model, variables }),\n};\n\nexport default apiService;\n"],"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","ignoreList":[]}