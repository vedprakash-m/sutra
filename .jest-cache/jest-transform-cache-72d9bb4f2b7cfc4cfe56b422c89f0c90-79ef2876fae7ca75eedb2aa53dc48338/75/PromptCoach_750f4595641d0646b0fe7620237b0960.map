{"version":3,"names":["cov_287bhnbzbq","actualCoverage","useState","useEffect","LightBulbIcon","XMarkIcon","CheckIcon","PromptCoach","promptContent","intention","contextDetails","onSuggestionApply","className","b","f","suggestions","setSuggestions","s","dismissedSuggestions","setDismissedSuggestions","Set","isExpanded","setIsExpanded","trim","newSuggestions","toLowerCase","includes","push","id","type","title","description","example","priority","length","hasVariables","test","filteredSuggestions","filter","has","handleDismissSuggestion","suggestionId","prev","handleApplySuggestion","suggestion","getPriorityColor","getTypeIcon","_jsxs","children","_jsx","onClick","map"],"sources":["/Users/vedprakashmishra/sutra/src/components/prompt/PromptCoach.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  LightBulbIcon,\n  XMarkIcon,\n  CheckIcon,\n} from \"@heroicons/react/24/outline\";\n\ninterface PromptCoachProps {\n  promptContent: string;\n  intention: string;\n  contextDetails: Record<string, any>;\n  onSuggestionApply?: (suggestion: string) => void;\n  className?: string;\n}\n\ninterface Suggestion {\n  id: string;\n  type: \"structure\" | \"clarity\" | \"specificity\" | \"examples\" | \"format\";\n  title: string;\n  description: string;\n  example?: string;\n  priority: \"high\" | \"medium\" | \"low\";\n}\n\nexport default function PromptCoach({\n  promptContent,\n  intention,\n  contextDetails,\n  onSuggestionApply,\n  className = \"\",\n}: PromptCoachProps) {\n  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\n  const [dismissedSuggestions, setDismissedSuggestions] = useState<Set<string>>(\n    new Set(),\n  );\n  const [isExpanded, setIsExpanded] = useState(true);\n\n  // Analyze prompt and generate suggestions\n  useEffect(() => {\n    if (!promptContent.trim()) {\n      setSuggestions([]);\n      return;\n    }\n\n    const newSuggestions: Suggestion[] = [];\n\n    // Check for role specification\n    if (\n      !promptContent.toLowerCase().includes(\"act as\") &&\n      !promptContent.toLowerCase().includes(\"you are\")\n    ) {\n      newSuggestions.push({\n        id: \"add-role\",\n        type: \"structure\",\n        title: \"Add Role Specification\",\n        description:\n          'Start with \"Act as [role]\" to set clear context for the AI',\n        example: \"Act as a professional marketing copywriter...\",\n        priority: \"high\",\n      });\n    }\n\n    // Check for specific instructions\n    if (promptContent.length < 50) {\n      newSuggestions.push({\n        id: \"add-details\",\n        type: \"specificity\",\n        title: \"Add More Specific Instructions\",\n        description: \"Provide more detailed requirements for better results\",\n        example:\n          \"Include specific tone, format, length, and key points to cover\",\n        priority: \"high\",\n      });\n    }\n\n    // Check for examples\n    if (\n      !promptContent.toLowerCase().includes(\"example\") &&\n      !promptContent.includes(\"like this:\")\n    ) {\n      newSuggestions.push({\n        id: \"add-examples\",\n        type: \"examples\",\n        title: \"Include Examples\",\n        description: \"Add examples to clarify the expected output format\",\n        example: 'For example: \"Subject: Welcome to our premium service\"',\n        priority: \"medium\",\n      });\n    }\n\n    // Check for output format specification\n    if (\n      !promptContent.toLowerCase().includes(\"format\") &&\n      !promptContent.toLowerCase().includes(\"structure\")\n    ) {\n      newSuggestions.push({\n        id: \"specify-format\",\n        type: \"format\",\n        title: \"Specify Output Format\",\n        description:\n          \"Define the desired output structure (bullet points, paragraphs, etc.)\",\n        example: \"Format the response as a bulleted list with clear headings\",\n        priority: \"medium\",\n      });\n    }\n\n    // Check for variables usage\n    const hasVariables = /\\{\\{.*?\\}\\}/.test(promptContent);\n    if (!hasVariables && intention.toLowerCase().includes(\"template\")) {\n      newSuggestions.push({\n        id: \"add-variables\",\n        type: \"specificity\",\n        title: \"Use Variables for Reusability\",\n        description: \"Add {{variables}} to make this prompt reusable\",\n        example: \"Write about {{product_name}} for {{target_audience}}\",\n        priority: \"medium\",\n      });\n    }\n\n    // Check for step-by-step instructions\n    if (\n      intention.toLowerCase().includes(\"complex\") ||\n      intention.toLowerCase().includes(\"detailed\")\n    ) {\n      if (\n        !promptContent.toLowerCase().includes(\"step\") &&\n        !promptContent.toLowerCase().includes(\"first\")\n      ) {\n        newSuggestions.push({\n          id: \"add-steps\",\n          type: \"structure\",\n          title: \"Use Step-by-Step Approach\",\n          description: \"Break down complex tasks into clear steps\",\n          example:\n            \"Follow these steps: 1) Analyze the requirements, 2) Draft the content, 3) Review and refine\",\n          priority: \"medium\",\n        });\n      }\n    }\n\n    // Check for constraints\n    if (\n      !promptContent.toLowerCase().includes(\"limit\") &&\n      !promptContent.toLowerCase().includes(\"words\") &&\n      !promptContent.toLowerCase().includes(\"length\")\n    ) {\n      newSuggestions.push({\n        id: \"add-constraints\",\n        type: \"clarity\",\n        title: \"Set Clear Constraints\",\n        description: \"Specify length, word count, or other limitations\",\n        example: \"Keep the response under 200 words and use professional tone\",\n        priority: \"low\",\n      });\n    }\n\n    // Filter out dismissed suggestions\n    const filteredSuggestions = newSuggestions.filter(\n      (s) => !dismissedSuggestions.has(s.id),\n    );\n    setSuggestions(filteredSuggestions);\n  }, [promptContent, intention, contextDetails, dismissedSuggestions]);\n\n  const handleDismissSuggestion = (suggestionId: string) => {\n    setDismissedSuggestions((prev) => new Set([...prev, suggestionId]));\n  };\n\n  const handleApplySuggestion = (suggestion: Suggestion) => {\n    if (onSuggestionApply && suggestion.example) {\n      onSuggestionApply(suggestion.example);\n    }\n    handleDismissSuggestion(suggestion.id);\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"high\":\n        return \"text-red-600 bg-red-50 border-red-200\";\n      case \"medium\":\n        return \"text-yellow-600 bg-yellow-50 border-yellow-200\";\n      case \"low\":\n        return \"text-green-600 bg-green-50 border-green-200\";\n      default:\n        return \"text-gray-600 bg-gray-50 border-gray-200\";\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case \"structure\":\n        return \"üèóÔ∏è\";\n      case \"clarity\":\n        return \"üîç\";\n      case \"specificity\":\n        return \"üéØ\";\n      case \"examples\":\n        return \"üí°\";\n      case \"format\":\n        return \"üìÑ\";\n      default:\n        return \"üí≠\";\n    }\n  };\n\n  if (suggestions.length === 0) {\n    return (\n      <div\n        className={`bg-green-50 border border-green-200 rounded-lg p-4 ${className}`}\n      >\n        <div className=\"flex items-center space-x-2\">\n          <CheckIcon className=\"h-5 w-5 text-green-600\" />\n          <span className=\"text-green-800 font-medium\">\n            Great prompt structure!\n          </span>\n        </div>\n        <p className=\"text-green-700 text-sm mt-1\">\n          Your prompt follows best practices.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg ${className}`}>\n      <div\n        className=\"flex items-center justify-between p-3 cursor-pointer border-b border-gray-200\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex items-center space-x-2\">\n          <LightBulbIcon className=\"h-5 w-5 text-blue-600\" />\n          <span className=\"font-medium text-gray-900\">PromptCoach</span>\n          <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n            {suggestions.length} suggestion{suggestions.length !== 1 ? \"s\" : \"\"}\n          </span>\n        </div>\n        <div className=\"text-gray-400\">{isExpanded ? \"‚àí\" : \"+\"}</div>\n      </div>\n\n      {isExpanded && (\n        <div className=\"p-3 space-y-3\">\n          {suggestions.map((suggestion) => (\n            <div\n              key={suggestion.id}\n              className={`border rounded-lg p-3 ${getPriorityColor(suggestion.priority)}`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <span className=\"text-sm\">\n                      {getTypeIcon(suggestion.type)}\n                    </span>\n                    <h4 className=\"font-medium text-sm\">{suggestion.title}</h4>\n                    <span className=\"text-xs uppercase font-medium px-2 py-1 rounded bg-white bg-opacity-50\">\n                      {suggestion.priority}\n                    </span>\n                  </div>\n                  <p className=\"text-sm opacity-80 mb-2\">\n                    {suggestion.description}\n                  </p>\n                  {suggestion.example && (\n                    <div className=\"bg-white bg-opacity-50 rounded p-2 text-xs font-mono\">\n                      {suggestion.example}\n                    </div>\n                  )}\n                </div>\n                <div className=\"flex space-x-1 ml-2\">\n                  {suggestion.example && onSuggestionApply && (\n                    <button\n                      onClick={() => handleApplySuggestion(suggestion)}\n                      className=\"p-1 hover:bg-white hover:bg-opacity-50 rounded\"\n                      title=\"Apply suggestion\"\n                    >\n                      <CheckIcon className=\"h-4 w-4\" />\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDismissSuggestion(suggestion.id)}\n                    className=\"p-1 hover:bg-white hover:bg-opacity-50 rounded\"\n                    title=\"Dismiss suggestion\"\n                  >\n                    <XMarkIcon className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"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","ignoreList":[]}