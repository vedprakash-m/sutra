256b663b04b8638ac20f6815f4864f87
"use strict";

/* istanbul ignore next */
function cov_1doqv66wke() {
  var path = "/Users/vedprakashmishra/sutra/src/components/auth/AuthProvider.tsx";
  var hash = "40212ed39a9a94a7e3f9282241c9a509bfbc5007";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/vedprakashmishra/sutra/src/components/auth/AuthProvider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 26
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "5": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 57
        }
      },
      "6": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 56
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 71
        }
      },
      "9": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "10": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 55
        }
      },
      "11": {
        start: {
          line: 17,
          column: 38
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "12": {
        start: {
          line: 18,
          column: 30
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "13": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "14": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 58
        }
      },
      "15": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "16": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 23,
          column: 60
        }
      },
      "17": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "19": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 43
        }
      },
      "20": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "21": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "22": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "23": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "24": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "25": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "26": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 77
        }
      },
      "27": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "28": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "29": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 73
        }
      },
      "30": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "31": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 50
        }
      },
      "32": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "33": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 32
        }
      },
      "34": {
        start: {
          line: 56,
          column: 19
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "35": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 22
        }
      },
      "36": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 23
        }
      },
      "37": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "38": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 47
        }
      },
      "39": {
        start: {
          line: 62,
          column: 18
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "40": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 94
        }
      }
    },
    fnMap: {
      "0": {
        name: "useAuth",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 19
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "AuthProvider",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 28
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 19
          }
        },
        loc: {
          start: {
            line: 31,
            column: 74
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 56,
            column: 20
          }
        },
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 49
          }
        }, {
          start: {
            line: 20,
            column: 53
          },
          end: {
            line: 20,
            column: 58
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 21
          }
        }, {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 35
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 33
          },
          end: {
            line: 31,
            column: 48
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 50
          },
          end: {
            line: 31,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 64
          },
          end: {
            line: 31,
            column: 69
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 36,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 49
          }
        }, {
          start: {
            line: 36,
            column: 52
          },
          end: {
            line: 36,
            column: 66
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 37,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 37
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 56
          },
          end: {
            line: 37,
            column: 61
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 36
          },
          end: {
            line: 38,
            column: 55
          }
        }, {
          start: {
            line: 38,
            column: 58
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 37
          },
          end: {
            line: 39,
            column: 54
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 65
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 41,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 44
          },
          end: {
            line: 41,
            column: 62
          }
        }, {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 77
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/vedprakashmishra/sutra/src/components/auth/AuthProvider.tsx",
      mappings: ";;AA2BA,0BAMC;AAMD,oCAiEC;;AAxGD,iCAMe;AAmBf,MAAM,WAAW,GAAG,IAAA,qBAAa,EAA8B,SAAS,CAAC,CAAC;AAE1E,SAAgB,OAAO;IACrB,MAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,WAAW,CAAC,CAAC;IACxC,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;IACjE,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAMD,SAAgB,YAAY,CAAC,EAAE,QAAQ,EAAqB;IAC1D,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,IAAA,gBAAQ,EAAc,IAAI,CAAC,CAAC;IACpD,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,IAAA,gBAAQ,EAAC,IAAI,CAAC,CAAC;IACjD,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAgB,IAAI,CAAC,CAAC;IAExD,MAAM,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC;IAC/B,MAAM,OAAO,GAAG,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC;IAEvD,0CAA0C;IAC1C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACrD,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEvD,IAAI,SAAS,IAAI,UAAU,EAAE,CAAC;YAC5B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/B,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvB,CAAC;QACD,YAAY,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,KAAK,GAAG,KAAK,EAAE,KAAK,GAAG,eAAe,EAAE,WAAW,GAAG,KAAK,EAAE,EAAE;QACnE,YAAY,CAAC,IAAI,CAAC,CAAC;QACnB,IAAI,CAAC;YACH,kCAAkC;YAClC,MAAM,QAAQ,GAAS;gBACrB,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc;gBAClD,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK;gBAC7C,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,kBAAkB;gBAC5D,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;aAClD,CAAC;YAEF,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,YAAY,CAAC;YAElE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAClB,QAAQ,CAAC,SAAS,CAAC,CAAC;YAEpB,uBAAuB;YACvB,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7D,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;YACtC,MAAM,KAAK,CAAC;QACd,CAAC;gBAAS,CAAC;YACT,YAAY,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,MAAM,GAAG,KAAK,IAAI,EAAE;QACxB,OAAO,CAAC,IAAI,CAAC,CAAC;QACd,QAAQ,CAAC,IAAI,CAAC,CAAC;QACf,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,MAAM,KAAK,GAAoB;QAC7B,IAAI;QACJ,eAAe;QACf,SAAS;QACT,KAAK;QACL,MAAM;QACN,OAAO;QACP,KAAK;KACN,CAAC;IAEF,OAAO,uBAAC,WAAW,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,YAAG,QAAQ,GAAwB,CAAC;AAC/E,CAAC",
      names: [],
      sources: ["/Users/vedprakashmishra/sutra/src/components/auth/AuthProvider.tsx"],
      sourcesContent: ["import {\n  createContext,\n  useContext,\n  ReactNode,\n  useState,\n  useEffect,\n} from \"react\";\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  roles: string[];\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email?: string, isAdmin?: boolean) => Promise<void>;\n  logout: () => Promise<void>;\n  isAdmin: boolean;\n  token: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [token, setToken] = useState<string | null>(null);\n\n  const isAuthenticated = !!user;\n  const isAdmin = user?.roles.includes(\"admin\") ?? false;\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"sutra_user\");\n    const savedToken = localStorage.getItem(\"sutra_token\");\n\n    if (savedUser && savedToken) {\n      setUser(JSON.parse(savedUser));\n      setToken(savedToken);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email = \"user@sutra.ai\", isAdminUser = false) => {\n    setIsLoading(true);\n    try {\n      // Development mode authentication\n      const mockUser: User = {\n        id: isAdminUser ? \"mock-admin-id\" : \"mock-user-id\",\n        email: isAdminUser ? \"admin@sutra.ai\" : email,\n        name: isAdminUser ? \"Development Admin\" : \"Development User\",\n        roles: isAdminUser ? [\"admin\", \"user\"] : [\"user\"],\n      };\n\n      const mockToken = isAdminUser ? \"mock-admin-token\" : \"mock-token\";\n\n      setUser(mockUser);\n      setToken(mockToken);\n\n      // Save to localStorage\n      localStorage.setItem(\"sutra_user\", JSON.stringify(mockUser));\n      localStorage.setItem(\"sutra_token\", mockToken);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(\"sutra_user\");\n    localStorage.removeItem(\"sutra_token\");\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    isAdmin,\n    token,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "40212ed39a9a94a7e3f9282241c9a509bfbc5007"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1doqv66wke = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1doqv66wke();
cov_1doqv66wke().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1doqv66wke().s[1]++;
exports.useAuth = useAuth;
/* istanbul ignore next */
cov_1doqv66wke().s[2]++;
exports.AuthProvider = AuthProvider;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_1doqv66wke().s[3]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_1doqv66wke().s[4]++, require("react"));
const AuthContext =
/* istanbul ignore next */
(cov_1doqv66wke().s[5]++, (0, react_1.createContext)(undefined));
function useAuth() {
  /* istanbul ignore next */
  cov_1doqv66wke().f[0]++;
  const context =
  /* istanbul ignore next */
  (cov_1doqv66wke().s[6]++, (0, react_1.useContext)(AuthContext));
  /* istanbul ignore next */
  cov_1doqv66wke().s[7]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_1doqv66wke().b[0][0]++;
    cov_1doqv66wke().s[8]++;
    throw new Error("useAuth must be used within an AuthProvider");
  } else
  /* istanbul ignore next */
  {
    cov_1doqv66wke().b[0][1]++;
  }
  cov_1doqv66wke().s[9]++;
  return context;
}
function AuthProvider({
  children
}) {
  /* istanbul ignore next */
  cov_1doqv66wke().f[1]++;
  const [user, setUser] =
  /* istanbul ignore next */
  (cov_1doqv66wke().s[10]++, (0, react_1.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1doqv66wke().s[11]++, (0, react_1.useState)(true));
  const [token, setToken] =
  /* istanbul ignore next */
  (cov_1doqv66wke().s[12]++, (0, react_1.useState)(null));
  const isAuthenticated =
  /* istanbul ignore next */
  (cov_1doqv66wke().s[13]++, !!user);
  const isAdmin =
  /* istanbul ignore next */
  (cov_1doqv66wke().s[14]++,
  /* istanbul ignore next */
  (cov_1doqv66wke().b[1][0]++, user?.roles.includes("admin")) ??
  /* istanbul ignore next */
  (cov_1doqv66wke().b[1][1]++, false));
  // Initialize auth state from localStorage
  /* istanbul ignore next */
  cov_1doqv66wke().s[15]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1doqv66wke().f[2]++;
    const savedUser =
    /* istanbul ignore next */
    (cov_1doqv66wke().s[16]++, localStorage.getItem("sutra_user"));
    const savedToken =
    /* istanbul ignore next */
    (cov_1doqv66wke().s[17]++, localStorage.getItem("sutra_token"));
    /* istanbul ignore next */
    cov_1doqv66wke().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_1doqv66wke().b[3][0]++, savedUser) &&
    /* istanbul ignore next */
    (cov_1doqv66wke().b[3][1]++, savedToken)) {
      /* istanbul ignore next */
      cov_1doqv66wke().b[2][0]++;
      cov_1doqv66wke().s[19]++;
      setUser(JSON.parse(savedUser));
      /* istanbul ignore next */
      cov_1doqv66wke().s[20]++;
      setToken(savedToken);
    } else
    /* istanbul ignore next */
    {
      cov_1doqv66wke().b[2][1]++;
    }
    cov_1doqv66wke().s[21]++;
    setIsLoading(false);
  }, []);
  /* istanbul ignore next */
  cov_1doqv66wke().s[22]++;
  const login = async (email =
  /* istanbul ignore next */
  (cov_1doqv66wke().b[4][0]++, "user@sutra.ai"), isAdminUser =
  /* istanbul ignore next */
  (cov_1doqv66wke().b[5][0]++, false)) => {
    /* istanbul ignore next */
    cov_1doqv66wke().f[3]++;
    cov_1doqv66wke().s[23]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_1doqv66wke().s[24]++;
    try {
      // Development mode authentication
      const mockUser =
      /* istanbul ignore next */
      (cov_1doqv66wke().s[25]++, {
        id: isAdminUser ?
        /* istanbul ignore next */
        (cov_1doqv66wke().b[6][0]++, "mock-admin-id") :
        /* istanbul ignore next */
        (cov_1doqv66wke().b[6][1]++, "mock-user-id"),
        email: isAdminUser ?
        /* istanbul ignore next */
        (cov_1doqv66wke().b[7][0]++, "admin@sutra.ai") :
        /* istanbul ignore next */
        (cov_1doqv66wke().b[7][1]++, email),
        name: isAdminUser ?
        /* istanbul ignore next */
        (cov_1doqv66wke().b[8][0]++, "Development Admin") :
        /* istanbul ignore next */
        (cov_1doqv66wke().b[8][1]++, "Development User"),
        roles: isAdminUser ?
        /* istanbul ignore next */
        (cov_1doqv66wke().b[9][0]++, ["admin", "user"]) :
        /* istanbul ignore next */
        (cov_1doqv66wke().b[9][1]++, ["user"])
      });
      const mockToken =
      /* istanbul ignore next */
      (cov_1doqv66wke().s[26]++, isAdminUser ?
      /* istanbul ignore next */
      (cov_1doqv66wke().b[10][0]++, "mock-admin-token") :
      /* istanbul ignore next */
      (cov_1doqv66wke().b[10][1]++, "mock-token"));
      /* istanbul ignore next */
      cov_1doqv66wke().s[27]++;
      setUser(mockUser);
      /* istanbul ignore next */
      cov_1doqv66wke().s[28]++;
      setToken(mockToken);
      // Save to localStorage
      /* istanbul ignore next */
      cov_1doqv66wke().s[29]++;
      localStorage.setItem("sutra_user", JSON.stringify(mockUser));
      /* istanbul ignore next */
      cov_1doqv66wke().s[30]++;
      localStorage.setItem("sutra_token", mockToken);
    } catch (error) {
      /* istanbul ignore next */
      cov_1doqv66wke().s[31]++;
      console.error("Login failed:", error);
      /* istanbul ignore next */
      cov_1doqv66wke().s[32]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_1doqv66wke().s[33]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1doqv66wke().s[34]++;
  const logout = async () => {
    /* istanbul ignore next */
    cov_1doqv66wke().f[4]++;
    cov_1doqv66wke().s[35]++;
    setUser(null);
    /* istanbul ignore next */
    cov_1doqv66wke().s[36]++;
    setToken(null);
    /* istanbul ignore next */
    cov_1doqv66wke().s[37]++;
    localStorage.removeItem("sutra_user");
    /* istanbul ignore next */
    cov_1doqv66wke().s[38]++;
    localStorage.removeItem("sutra_token");
  };
  const value =
  /* istanbul ignore next */
  (cov_1doqv66wke().s[39]++, {
    user,
    isAuthenticated,
    isLoading,
    login,
    logout,
    isAdmin,
    token
  });
  /* istanbul ignore next */
  cov_1doqv66wke().s[40]++;
  return (0, jsx_runtime_1.jsx)(AuthContext.Provider, {
    value: value,
    children: children
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,