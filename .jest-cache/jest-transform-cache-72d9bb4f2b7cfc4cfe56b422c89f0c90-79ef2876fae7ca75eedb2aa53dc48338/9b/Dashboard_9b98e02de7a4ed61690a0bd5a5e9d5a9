2dd2bd6c935d270043e32043d1da7e0d
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Dashboard;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_router_dom_1 = require("react-router-dom");
const AuthProvider_1 = require("@/components/auth/AuthProvider");
const useApi_1 = require("@/hooks/useApi");
const api_1 = require("@/services/api");
function Dashboard() {
    const { user, isAdmin } = (0, AuthProvider_1.useAuth)();
    // Fetch dashboard data
    const { data: collectionsData, loading: collectionsLoading } = (0, useApi_1.useApi)(() => api_1.collectionsApi.list({ limit: 5 }), []);
    const { data: playbooksData, loading: playbooksLoading } = (0, useApi_1.useApi)(() => api_1.playbooksApi.list({ limit: 5 }), []);
    return ((0, jsx_runtime_1.jsxs)("div", { className: "max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8", children: [(0, jsx_runtime_1.jsxs)("div", { className: "mb-8", children: [(0, jsx_runtime_1.jsxs)("h1", { className: "text-2xl font-bold text-gray-900", children: ["Welcome back, ", user?.name] }), (0, jsx_runtime_1.jsx)("p", { className: "mt-1 text-sm text-gray-600", children: "Here's what you can do with Sutra today" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4 mb-8", children: [(0, jsx_runtime_1.jsx)(react_router_dom_1.Link, { to: "/prompts/new", className: "bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow", children: (0, jsx_runtime_1.jsx)("div", { className: "p-5", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex-shrink-0", children: (0, jsx_runtime_1.jsx)("div", { className: "w-8 h-8 bg-indigo-500 rounded-md flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5 text-white", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 4v16m8-8H4" }) }) }) }), (0, jsx_runtime_1.jsx)("div", { className: "ml-5 w-0 flex-1", children: (0, jsx_runtime_1.jsxs)("dl", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500 truncate", children: "Create Prompt" }), (0, jsx_runtime_1.jsx)("dd", { className: "text-lg font-medium text-gray-900", children: "New AI prompt" })] }) })] }) }) }), (0, jsx_runtime_1.jsx)(react_router_dom_1.Link, { to: "/collections", className: "bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow", children: (0, jsx_runtime_1.jsx)("div", { className: "p-5", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex-shrink-0", children: (0, jsx_runtime_1.jsx)("div", { className: "w-8 h-8 bg-green-500 rounded-md flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5 text-white", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" }) }) }) }), (0, jsx_runtime_1.jsx)("div", { className: "ml-5 w-0 flex-1", children: (0, jsx_runtime_1.jsxs)("dl", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500 truncate", children: "Collections" }), (0, jsx_runtime_1.jsx)("dd", { className: "text-lg font-medium text-gray-900", children: collectionsLoading
                                                        ? "Loading..."
                                                        : collectionsData?.pagination?.total_count || 0 })] }) })] }) }) }), (0, jsx_runtime_1.jsx)(react_router_dom_1.Link, { to: "/playbooks/new", className: "bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow", children: (0, jsx_runtime_1.jsx)("div", { className: "p-5", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex-shrink-0", children: (0, jsx_runtime_1.jsx)("div", { className: "w-8 h-8 bg-purple-500 rounded-md flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5 text-white", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" }) }) }) }), (0, jsx_runtime_1.jsx)("div", { className: "ml-5 w-0 flex-1", children: (0, jsx_runtime_1.jsxs)("dl", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500 truncate", children: "Create Playbook" }), (0, jsx_runtime_1.jsx)("dd", { className: "text-lg font-medium text-gray-900", children: "New workflow" })] }) })] }) }) }), (0, jsx_runtime_1.jsx)(react_router_dom_1.Link, { to: "/integrations", className: "bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow", children: (0, jsx_runtime_1.jsx)("div", { className: "p-5", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex-shrink-0", children: (0, jsx_runtime_1.jsx)("div", { className: "w-8 h-8 bg-orange-500 rounded-md flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5 text-white", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13 10V3L4 14h7v7l9-11h-7z" }) }) }) }), (0, jsx_runtime_1.jsx)("div", { className: "ml-5 w-0 flex-1", children: (0, jsx_runtime_1.jsxs)("dl", { children: [(0, jsx_runtime_1.jsx)("dt", { className: "text-sm font-medium text-gray-500 truncate", children: "Integrations" }), (0, jsx_runtime_1.jsx)("dd", { className: "text-lg font-medium text-gray-900", children: "LLM Setup" })] }) })] }) }) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-8", children: [(0, jsx_runtime_1.jsx)("div", { className: "bg-white shadow rounded-lg", children: (0, jsx_runtime_1.jsxs)("div", { className: "px-4 py-5 sm:p-6", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg leading-6 font-medium text-gray-900 mb-4", children: "Recent Collections" }), collectionsLoading ? ((0, jsx_runtime_1.jsx)("div", { className: "animate-pulse space-y-3", children: [...Array(3)].map((_, i) => ((0, jsx_runtime_1.jsx)("div", { className: "h-4 bg-gray-200 rounded" }, i))) })) : collectionsData?.items?.length ? ((0, jsx_runtime_1.jsx)("div", { className: "space-y-3", children: collectionsData.items.map((collection) => ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between p-3 border border-gray-200 rounded-md", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "text-sm font-medium text-gray-900", children: collection.name }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500", children: collection.description })] }), (0, jsx_runtime_1.jsx)("span", { className: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800", children: collection.type })] }, collection.id))) })) : ((0, jsx_runtime_1.jsx)("p", { className: "text-gray-500 text-center py-4", children: "No collections yet. Create your first collection!" })), (0, jsx_runtime_1.jsx)("div", { className: "mt-4", children: (0, jsx_runtime_1.jsx)(react_router_dom_1.Link, { to: "/collections", className: "text-sm font-medium text-indigo-600 hover:text-indigo-500", children: "View all collections \u2192" }) })] }) }), (0, jsx_runtime_1.jsx)("div", { className: "bg-white shadow rounded-lg", children: (0, jsx_runtime_1.jsxs)("div", { className: "px-4 py-5 sm:p-6", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg leading-6 font-medium text-gray-900 mb-4", children: "Recent Playbooks" }), playbooksLoading ? ((0, jsx_runtime_1.jsx)("div", { className: "animate-pulse space-y-3", children: [...Array(3)].map((_, i) => ((0, jsx_runtime_1.jsx)("div", { className: "h-4 bg-gray-200 rounded" }, i))) })) : playbooksData?.items?.length ? ((0, jsx_runtime_1.jsx)("div", { className: "space-y-3", children: playbooksData.items.map((playbook) => ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between p-3 border border-gray-200 rounded-md", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "text-sm font-medium text-gray-900", children: playbook.name }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500", children: playbook.description })] }), (0, jsx_runtime_1.jsx)("span", { className: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800", children: playbook.visibility })] }, playbook.id))) })) : ((0, jsx_runtime_1.jsx)("p", { className: "text-gray-500 text-center py-4", children: "No playbooks yet. Create your first workflow!" })), (0, jsx_runtime_1.jsx)("div", { className: "mt-4", children: (0, jsx_runtime_1.jsx)(react_router_dom_1.Link, { to: "/playbooks", className: "text-sm font-medium text-indigo-600 hover:text-indigo-500", children: "View all playbooks \u2192" }) })] }) })] }), isAdmin && ((0, jsx_runtime_1.jsx)("div", { className: "mt-8", children: (0, jsx_runtime_1.jsxs)("div", { className: "bg-gray-900 rounded-lg p-6", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-medium text-white mb-4", children: "Admin Dashboard" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 sm:grid-cols-3 gap-4", children: [(0, jsx_runtime_1.jsxs)(react_router_dom_1.Link, { to: "/admin", className: "bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-md text-center transition-colors", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm font-medium", children: "System Management" }), (0, jsx_runtime_1.jsx)("div", { className: "text-xs text-gray-300 mt-1", children: "Users, settings, health" })] }), (0, jsx_runtime_1.jsxs)(react_router_dom_1.Link, { to: "/admin#llm", className: "bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-md text-center transition-colors", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm font-medium", children: "LLM Configuration" }), (0, jsx_runtime_1.jsx)("div", { className: "text-xs text-gray-300 mt-1", children: "Providers, budgets, limits" })] }), (0, jsx_runtime_1.jsxs)(react_router_dom_1.Link, { to: "/admin#usage", className: "bg-gray-800 hover:bg-gray-700 text-white p-4 rounded-md text-center transition-colors", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm font-medium", children: "Usage Monitoring" }), (0, jsx_runtime_1.jsx)("div", { className: "text-xs text-gray-300 mt-1", children: "Costs, alerts, analytics" })] })] })] }) }))] }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,