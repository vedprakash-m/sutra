{"file":"/Users/vedprakashmishra/sutra/src/services/__mocks__/api.ts","mappings":"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","names":[],"sources":["/Users/vedprakashmishra/sutra/src/services/__mocks__/api.ts"],"sourcesContent":["// Mock for src/services/api.ts\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// @ts-nocheck\n\nexport interface ApiResponse<T = any> {\n  data?: T;\n  error?: string;\n  message?: string;\n  timestamp?: string;\n}\n\nexport interface PaginatedResponse<T> {\n  data: T[];\n  total: number;\n  page: number;\n  limit: number;\n  hasNext: boolean;\n}\n\nexport interface Collection {\n  id: string;\n  name: string;\n  description: string;\n  type: \"private\" | \"shared_team\" | \"public_marketplace\";\n  owner_id: string;\n  created_at: string;\n  updated_at: string;\n  prompt_count?: number;\n  tags?: string[];\n}\n\nexport interface Prompt {\n  id: string;\n  title: string;\n  content: string;\n  collection_id: string;\n  created_at: string;\n  updated_at: string;\n  version: number;\n  tags?: string[];\n}\n\nexport interface Playbook {\n  id: string;\n  name: string;\n  description: string;\n  steps: PlaybookStep[];\n  creator_id: string;\n  created_at: string;\n  updated_at: string;\n  visibility: \"private\" | \"shared\";\n}\n\nexport interface PlaybookStep {\n  id: string;\n  type: \"prompt\" | \"review\" | \"variable\";\n  prompt_id?: string;\n  content?: string;\n  variables?: Record<string, any>;\n  order: number;\n}\n\nexport interface LLMIntegration {\n  id: string;\n  provider: string;\n  name: string;\n  api_key: string;\n  enabled: boolean;\n  configuration: Record<string, any>;\n}\n\n// Mock implementation\nexport const apiService = {\n  async get<T>(endpoint: string): Promise<T> {\n    return {\n      data: [],\n      total: 0,\n      page: 1,\n      limit: 10,\n      hasNext: false,\n    } as T;\n  },\n\n  async post<T>(endpoint: string, data?: any): Promise<T> {\n    return {} as T;\n  },\n\n  async put<T>(endpoint: string, data?: any): Promise<T> {\n    return {} as T;\n  },\n\n  async delete<T>(endpoint: string): Promise<T> {\n    return {} as T;\n  },\n};\n\nexport const collectionsApi = {\n  list: (params?: any) =>\n    Promise.resolve({ data: [], total: 0, page: 1, limit: 10, hasNext: false }),\n  get: (id: string) => Promise.resolve({} as Collection),\n  create: (collection: any) => Promise.resolve({} as Collection),\n  update: (id: string, collection: any) => Promise.resolve({} as Collection),\n  delete: (id: string) => Promise.resolve(),\n};\n\nexport const playbooksApi = {\n  list: (params?: any) =>\n    Promise.resolve({ data: [], total: 0, page: 1, limit: 10, hasNext: false }),\n  get: (id: string) => Promise.resolve({} as Playbook),\n  create: (playbook: any) => Promise.resolve({} as Playbook),\n  update: (id: string, playbook: any) => Promise.resolve({} as Playbook),\n  delete: (id: string) => Promise.resolve(),\n};\n\nexport const integrationsApi = {\n  list: () =>\n    Promise.resolve({ data: [], total: 0, page: 1, limit: 10, hasNext: false }),\n  get: (id: string) => Promise.resolve({} as LLMIntegration),\n  create: (integration: any) => Promise.resolve({} as LLMIntegration),\n  update: (id: string, integration: any) =>\n    Promise.resolve({} as LLMIntegration),\n  delete: (id: string) => Promise.resolve(),\n};\n\nexport const adminApi = {\n  getStats: () => Promise.resolve({}),\n  getUsers: () =>\n    Promise.resolve({ data: [], total: 0, page: 1, limit: 10, hasNext: false }),\n};\n\nexport const llmApi = {\n  execute: (data: any) => Promise.resolve({}),\n};\n\nexport default apiService;\n"],"version":3}