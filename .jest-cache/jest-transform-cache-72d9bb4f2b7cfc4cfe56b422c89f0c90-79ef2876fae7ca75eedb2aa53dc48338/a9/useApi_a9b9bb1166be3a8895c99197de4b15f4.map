{"version":3,"names":["cov_zferir0lg","actualCoverage","s","exports","useApi","useAsyncAction","react_1","require","api_1","AuthProvider_1","apiCall","dependencies","b","f","state","setState","useState","data","loading","error","token","useAuth","fetchData","prev","apiService","setToken","result","Error","message","useEffect","refetch","setLoading","setError","execute","action","errorMessage"],"sources":["/Users/vedprakashmishra/sutra/src/hooks/useApi.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { apiService } from \"../services/api\";\nimport { useAuth } from \"../components/auth/AuthProvider\";\n\nexport interface UseApiState<T> {\n  data: T | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport function useApi<T>(\n  apiCall: () => Promise<T>,\n  dependencies: any[] = [],\n): UseApiState<T> & { refetch: () => Promise<void> } {\n  const [state, setState] = useState<UseApiState<T>>({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  const { token } = useAuth();\n\n  const fetchData = async () => {\n    setState((prev) => ({ ...prev, loading: true, error: null }));\n\n    try {\n      // Set the auth token for API requests\n      if (token) {\n        apiService.setToken(token);\n      }\n\n      const result = await apiCall();\n      setState({\n        data: result,\n        loading: false,\n        error: null,\n      });\n    } catch (error) {\n      setState({\n        data: null,\n        loading: false,\n        error: error instanceof Error ? error.message : \"An error occurred\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (token !== null) {\n      // Only fetch when auth state is determined\n      fetchData();\n    }\n  }, [token, ...dependencies]);\n\n  return {\n    ...state,\n    refetch: fetchData,\n  };\n}\n\nexport function useAsyncAction<T = any>() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { token } = useAuth();\n\n  const execute = async (action: () => Promise<T>): Promise<T | null> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Set the auth token for API requests\n      if (token) {\n        apiService.setToken(token);\n      }\n\n      const result = await action();\n      return result;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : \"An error occurred\";\n      setError(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    loading,\n    error,\n    execute,\n  };\n}\n"],"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","ignoreList":[]}