0ae44488f2b25345ef24d832243a5542
/* istanbul ignore next */
function cov_deps6wu46() {
  var path = "/Users/vedprakashmishra/sutra/src/components/prompt/PromptBuilder.tsx";
  var hash = "d31c3a5f390bd0a4908b3b39d8e080ab355f9154";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/vedprakashmishra/sutra/src/components/prompt/PromptBuilder.tsx",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "1": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "2": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 40
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "4": {
        start: {
          line: 17,
          column: 44
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "5": {
        start: {
          line: 18,
          column: 40
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "6": {
        start: {
          line: 19,
          column: 38
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "7": {
        start: {
          line: 20,
          column: 36
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "8": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "10": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "12": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 26
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 74
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "16": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "17": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "18": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 35,
          column: 112
        }
      },
      "19": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 40,
          column: 18
        }
      },
      "20": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "21": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 28
        }
      },
      "24": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "27": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 26
        }
      },
      "28": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "29": {
        start: {
          line: 61,
          column: 31
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "30": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "31": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "32": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 56
        }
      },
      "33": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 37
        }
      },
      "34": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 57
        }
      },
      "35": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 31
        }
      },
      "36": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "37": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 63
        }
      },
      "38": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 60
        }
      },
      "39": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 103,
          column: 445
        }
      },
      "40": {
        start: {
          line: 88,
          column: 925
        },
        end: {
          line: 88,
          column: 966
        }
      },
      "41": {
        start: {
          line: 88,
          column: 1379
        },
        end: {
          line: 88,
          column: 1426
        }
      },
      "42": {
        start: {
          line: 88,
          column: 1868
        },
        end: {
          line: 88,
          column: 1911
        }
      },
      "43": {
        start: {
          line: 90,
          column: 36
        },
        end: {
          line: 90,
          column: 106
        }
      },
      "44": {
        start: {
          line: 91,
          column: 301
        },
        end: {
          line: 98,
          column: 234
        }
      },
      "45": {
        start: {
          line: 92,
          column: 56
        },
        end: {
          line: 97,
          column: 57
        }
      },
      "46": {
        start: {
          line: 93,
          column: 60
        },
        end: {
          line: 93,
          column: 100
        }
      },
      "47": {
        start: {
          line: 96,
          column: 60
        },
        end: {
          line: 96,
          column: 115
        }
      },
      "48": {
        start: {
          line: 96,
          column: 103
        },
        end: {
          line: 96,
          column: 112
        }
      },
      "49": {
        start: {
          line: 101,
          column: 59
        },
        end: {
          line: 101,
          column: 74
        }
      },
      "50": {
        start: {
          line: 102,
          column: 44
        },
        end: {
          line: 102,
          column: 882
        }
      }
    },
    fnMap: {
      "0": {
        name: "PromptBuilder",
        decl: {
          start: {
            line: 7,
            column: 24
          },
          end: {
            line: 7,
            column: 37
          }
        },
        loc: {
          start: {
            line: 7,
            column: 40
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 30
          }
        },
        loc: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 30
          }
        },
        loc: {
          start: {
            line: 28,
            column: 43
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 42
          },
          end: {
            line: 33,
            column: 43
          }
        },
        loc: {
          start: {
            line: 33,
            column: 62
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 30
          }
        },
        loc: {
          start: {
            line: 56,
            column: 41
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 30
          }
        },
        loc: {
          start: {
            line: 85,
            column: 47
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 85
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 86,
            column: 22
          },
          end: {
            line: 86,
            column: 23
          }
        },
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 86,
            column: 60
          }
        },
        line: 86
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 918
          },
          end: {
            line: 88,
            column: 919
          }
        },
        loc: {
          start: {
            line: 88,
            column: 925
          },
          end: {
            line: 88,
            column: 966
          }
        },
        line: 88
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 88,
            column: 1372
          },
          end: {
            line: 88,
            column: 1373
          }
        },
        loc: {
          start: {
            line: 88,
            column: 1379
          },
          end: {
            line: 88,
            column: 1426
          }
        },
        line: 88
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 88,
            column: 1861
          },
          end: {
            line: 88,
            column: 1862
          }
        },
        loc: {
          start: {
            line: 88,
            column: 1868
          },
          end: {
            line: 88,
            column: 1911
          }
        },
        line: 88
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 88,
            column: 2225
          },
          end: {
            line: 88,
            column: 2226
          }
        },
        loc: {
          start: {
            line: 88,
            column: 2241
          },
          end: {
            line: 91,
            column: 33
          }
        },
        line: 88
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 291
          },
          end: {
            line: 91,
            column: 292
          }
        },
        loc: {
          start: {
            line: 91,
            column: 301
          },
          end: {
            line: 98,
            column: 234
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 91,
            column: 442
          },
          end: {
            line: 91,
            column: 443
          }
        },
        loc: {
          start: {
            line: 91,
            column: 449
          },
          end: {
            line: 98,
            column: 53
          }
        },
        line: 91
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 96,
            column: 96
          },
          end: {
            line: 96,
            column: 97
          }
        },
        loc: {
          start: {
            line: 96,
            column: 103
          },
          end: {
            line: 96,
            column: 112
          }
        },
        line: 96
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 100,
            column: 596
          },
          end: {
            line: 100,
            column: 597
          }
        },
        loc: {
          start: {
            line: 100,
            column: 605
          },
          end: {
            line: 103,
            column: 41
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 85
          },
          end: {
            line: 35,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 85
          },
          end: {
            line: 35,
            column: 105
          }
        }, {
          start: {
            line: 35,
            column: 109
          },
          end: {
            line: 35,
            column: 111
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 44
          }
        }, {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 38,
            column: 66
          }
        }, {
          start: {
            line: 38,
            column: 70
          },
          end: {
            line: 38,
            column: 92
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 47,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 52
          },
          end: {
            line: 47,
            column: 65
          }
        }, {
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 47,
            column: 83
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 58,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 36
          }
        }, {
          start: {
            line: 57,
            column: 40
          },
          end: {
            line: 57,
            column: 66
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 34
          }
        }, {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 48
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: 72,
            column: 17
          },
          end: {
            line: 75,
            column: 13
          }
        }],
        line: 68
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 97,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 97,
            column: 57
          }
        }, {
          start: {
            line: 95,
            column: 61
          },
          end: {
            line: 97,
            column: 57
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 98,
            column: 370
          },
          end: {
            line: 98,
            column: 409
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 370
          },
          end: {
            line: 98,
            column: 379
          }
        }, {
          start: {
            line: 98,
            column: 383
          },
          end: {
            line: 98,
            column: 409
          }
        }],
        line: 98
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 610
          },
          end: {
            line: 98,
            column: 650
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 622
          },
          end: {
            line: 98,
            column: 634
          }
        }, {
          start: {
            line: 98,
            column: 637
          },
          end: {
            line: 98,
            column: 650
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 725
          },
          end: {
            line: 100,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 725
          },
          end: {
            line: 98,
            column: 733
          }
        }, {
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 99,
            column: 68
          }
        }, {
          start: {
            line: 100,
            column: 44
          },
          end: {
            line: 100,
            column: 70
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 100,
            column: 265
          },
          end: {
            line: 100,
            column: 303
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 276
          },
          end: {
            line: 100,
            column: 287
          }
        }, {
          start: {
            line: 100,
            column: 290
          },
          end: {
            line: 100,
            column: 303
          }
        }],
        line: 100
      },
      "13": {
        loc: {
          start: {
            line: 102,
            column: 324
          },
          end: {
            line: 102,
            column: 868
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 343
          },
          end: {
            line: 102,
            column: 540
          }
        }, {
          start: {
            line: 102,
            column: 544
          },
          end: {
            line: 102,
            column: 868
          }
        }],
        line: 102
      },
      "14": {
        loc: {
          start: {
            line: 102,
            column: 544
          },
          end: {
            line: 102,
            column: 868
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 561
          },
          end: {
            line: 102,
            column: 641
          }
        }, {
          start: {
            line: 102,
            column: 645
          },
          end: {
            line: 102,
            column: 868
          }
        }],
        line: 102
      },
      "15": {
        loc: {
          start: {
            line: 102,
            column: 645
          },
          end: {
            line: 102,
            column: 868
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 665
          },
          end: {
            line: 102,
            column: 755
          }
        }, {
          start: {
            line: 102,
            column: 760
          },
          end: {
            line: 102,
            column: 867
          }
        }],
        line: 102
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/vedprakashmishra/sutra/src/components/prompt/PromptBuilder.tsx",
      mappings: "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",
      names: [],
      sources: ["/Users/vedprakashmishra/sutra/src/components/prompt/PromptBuilder.tsx"],
      sourcesContent: ["import { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"@/components/auth/AuthProvider\";\nimport { llmApi, collectionsApi } from \"@/services/api\";\nimport PromptCoach from \"./PromptCoach\";\n\ninterface PromptData {\n  title: string;\n  description: string;\n  content: string;\n  collection_id?: string;\n  variables?: Record<string, any>;\n}\n\ninterface LLMOutput {\n  provider: string;\n  response: string;\n  loading: boolean;\n  error?: string;\n}\n\nexport default function PromptBuilder() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  const [promptData, setPromptData] = useState<PromptData>({\n    title: \"\",\n    description: \"\",\n    content: \"\",\n    variables: {},\n  });\n  const [selectedLLMs, setSelectedLLMs] = useState<string[]>([\"openai\"]);\n  const [llmOutputs, setLlmOutputs] = useState<Record<string, LLMOutput>>({});\n  const [isTesting, setIsTesting] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Test prompt with selected LLMs\n  const handleTestPrompt = async () => {\n    if (!promptData.content.trim()) return;\n\n    setIsTesting(true);\n    const outputs: Record<string, LLMOutput> = {};\n\n    // Initialize outputs for selected LLMs\n    selectedLLMs.forEach((provider) => {\n      outputs[provider] = { provider, response: \"\", loading: true };\n    });\n    setLlmOutputs(outputs);\n\n    // Test each LLM in parallel\n    const promises = selectedLLMs.map(async (provider) => {\n      try {\n        const response = (await llmApi.execute(\n          promptData.content,\n          provider,\n          promptData.variables || {},\n        )) as any;\n        outputs[provider] = {\n          provider,\n          response:\n            response?.data || response?.response || \"No response received\",\n          loading: false,\n        };\n      } catch (error) {\n        outputs[provider] = {\n          provider,\n          response: \"\",\n          loading: false,\n          error: error instanceof Error ? error.message : \"Unknown error\",\n        };\n      }\n      setLlmOutputs({ ...outputs });\n    });\n\n    await Promise.all(promises);\n    setIsTesting(false);\n  };\n\n  // Save prompt as a collection for now (MVP approach)\n  const handleSavePrompt = async () => {\n    if (!promptData.title.trim() || !promptData.content.trim()) return;\n\n    setIsSaving(true);\n    try {\n      const collection = {\n        name: promptData.title,\n        description: `${promptData.description}\\n\\nPrompt Content:\\n${promptData.content}`,\n        type: \"private\" as const,\n        owner_id: user?.id || \"dev-user\",\n        tags: [\"prompt\"],\n      };\n\n      if (id) {\n        // Update existing collection\n        await collectionsApi.update(id, collection);\n      } else {\n        // Create new collection\n        await collectionsApi.create(collection);\n      }\n\n      navigate(\"/collections\");\n    } catch (error) {\n      console.error(\"Error saving prompt:\", error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const updatePromptData = (field: keyof PromptData, value: any) => {\n    setPromptData((prev) => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Prompt Builder</h1>\n        <p className=\"mt-1 text-sm text-gray-600\">\n          Create and test AI prompts with multi-LLM comparison\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"space-y-6\">\n          <div className=\"bg-white shadow rounded-lg p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Prompt Details\n            </h2>\n            <div className=\"space-y-4\">\n              <div>\n                <label\n                  htmlFor=\"title\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Title\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  value={promptData.title}\n                  onChange={(e) => updatePromptData(\"title\", e.target.value)}\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  placeholder=\"Enter prompt title\"\n                />\n              </div>\n              <div>\n                <label\n                  htmlFor=\"description\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Description\n                </label>\n                <textarea\n                  id=\"description\"\n                  rows={3}\n                  value={promptData.description}\n                  onChange={(e) =>\n                    updatePromptData(\"description\", e.target.value)\n                  }\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  placeholder=\"Describe what this prompt does\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white shadow rounded-lg p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Prompt Text\n            </h2>\n            <div>\n              <textarea\n                value={promptData.content}\n                onChange={(e) => updatePromptData(\"content\", e.target.value)}\n                rows={10}\n                className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                placeholder=\"Write your prompt here...\"\n              />\n            </div>\n          </div>\n\n          <PromptCoach\n            promptContent={promptData.content}\n            intention={promptData.description}\n            contextDetails={{}}\n            onSuggestionApply={(suggestion) => {\n              // Add suggestion to the end of prompt content\n              updatePromptData(\n                \"content\",\n                promptData.content + \"\\n\\n\" + suggestion,\n              );\n            }}\n          />\n\n          <div className=\"bg-white shadow rounded-lg p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n              LLM Selection\n            </h2>\n            <div className=\"space-y-2\">\n              {[\"openai\", \"anthropic\", \"google\"].map((llm) => (\n                <label key={llm} className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedLLMs.includes(llm)}\n                    onChange={(e) => {\n                      if (e.target.checked) {\n                        setSelectedLLMs([...selectedLLMs, llm]);\n                      } else {\n                        setSelectedLLMs(selectedLLMs.filter((l) => l !== llm));\n                      }\n                    }}\n                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700 capitalize\">\n                    {llm}\n                  </span>\n                </label>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"flex space-x-4\">\n            <button\n              type=\"button\"\n              onClick={handleTestPrompt}\n              disabled={isTesting || !promptData.content.trim()}\n              className=\"flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isTesting ? \"Testing...\" : \"Test Prompt\"}\n            </button>\n            <button\n              type=\"button\"\n              onClick={handleSavePrompt}\n              disabled={\n                isSaving ||\n                !promptData.title.trim() ||\n                !promptData.content.trim()\n              }\n              className=\"flex-1 bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSaving ? \"Saving...\" : \"Save Prompt\"}\n            </button>\n          </div>\n        </div>\n\n        <div className=\"space-y-6\">\n          <div className=\"bg-white shadow rounded-lg p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n              LLM Outputs\n            </h2>\n            <div className=\"space-y-4\">\n              {selectedLLMs.map((llm) => {\n                const output = llmOutputs[llm];\n                return (\n                  <div\n                    key={llm}\n                    className=\"border border-gray-200 rounded-lg p-4\"\n                  >\n                    <h3 className=\"text-sm font-medium text-gray-900 mb-2 capitalize\">\n                      {llm} Response\n                    </h3>\n                    <div className=\"bg-gray-50 rounded p-3 min-h-[100px] text-sm\">\n                      {output?.loading ? (\n                        <div className=\"flex items-center text-gray-600\">\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600 mr-2\"></div>\n                          Generating response...\n                        </div>\n                      ) : output?.error ? (\n                        <div className=\"text-red-600\">\n                          Error: {output.error}\n                        </div>\n                      ) : output?.response ? (\n                        <div className=\"text-gray-900 whitespace-pre-wrap\">\n                          {output.response}\n                        </div>\n                      ) : (\n                        <div className=\"text-gray-600\">\n                          Click \"Test Prompt\" to see {llm} response\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          <div className=\"bg-white shadow rounded-lg p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Prompt Coach\n            </h2>\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <p className=\"text-sm text-blue-700\">\n                \uD83D\uDCA1 AI-powered suggestions will appear here to help improve your\n                prompt\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d31c3a5f390bd0a4908b3b39d8e080ab355f9154"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_deps6wu46 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_deps6wu46();
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { useAuth } from "@/components/auth/AuthProvider";
import { llmApi, collectionsApi } from "@/services/api";
import PromptCoach from "./PromptCoach";
export default function PromptBuilder() {
  /* istanbul ignore next */
  cov_deps6wu46().f[0]++;
  const {
    id
  } =
  /* istanbul ignore next */
  (cov_deps6wu46().s[0]++, useParams());
  const navigate =
  /* istanbul ignore next */
  (cov_deps6wu46().s[1]++, useNavigate());
  const {
    user
  } =
  /* istanbul ignore next */
  (cov_deps6wu46().s[2]++, useAuth());
  const [promptData, setPromptData] =
  /* istanbul ignore next */
  (cov_deps6wu46().s[3]++, useState({
    title: "",
    description: "",
    content: "",
    variables: {}
  }));
  const [selectedLLMs, setSelectedLLMs] =
  /* istanbul ignore next */
  (cov_deps6wu46().s[4]++, useState(["openai"]));
  const [llmOutputs, setLlmOutputs] =
  /* istanbul ignore next */
  (cov_deps6wu46().s[5]++, useState({}));
  const [isTesting, setIsTesting] =
  /* istanbul ignore next */
  (cov_deps6wu46().s[6]++, useState(false));
  const [isSaving, setIsSaving] =
  /* istanbul ignore next */
  (cov_deps6wu46().s[7]++, useState(false));
  // Test prompt with selected LLMs
  /* istanbul ignore next */
  cov_deps6wu46().s[8]++;
  const handleTestPrompt = async () => {
    /* istanbul ignore next */
    cov_deps6wu46().f[1]++;
    cov_deps6wu46().s[9]++;
    if (!promptData.content.trim()) {
      /* istanbul ignore next */
      cov_deps6wu46().b[0][0]++;
      cov_deps6wu46().s[10]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_deps6wu46().b[0][1]++;
    }
    cov_deps6wu46().s[11]++;
    setIsTesting(true);
    const outputs =
    /* istanbul ignore next */
    (cov_deps6wu46().s[12]++, {});
    // Initialize outputs for selected LLMs
    /* istanbul ignore next */
    cov_deps6wu46().s[13]++;
    selectedLLMs.forEach(provider => {
      /* istanbul ignore next */
      cov_deps6wu46().f[2]++;
      cov_deps6wu46().s[14]++;
      outputs[provider] = {
        provider,
        response: "",
        loading: true
      };
    });
    /* istanbul ignore next */
    cov_deps6wu46().s[15]++;
    setLlmOutputs(outputs);
    // Test each LLM in parallel
    const promises =
    /* istanbul ignore next */
    (cov_deps6wu46().s[16]++, selectedLLMs.map(async provider => {
      /* istanbul ignore next */
      cov_deps6wu46().f[3]++;
      cov_deps6wu46().s[17]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_deps6wu46().s[18]++, await llmApi.execute(promptData.content, provider,
        /* istanbul ignore next */
        (cov_deps6wu46().b[1][0]++, promptData.variables) ||
        /* istanbul ignore next */
        (cov_deps6wu46().b[1][1]++, {})));
        /* istanbul ignore next */
        cov_deps6wu46().s[19]++;
        outputs[provider] = {
          provider,
          response:
          /* istanbul ignore next */
          (cov_deps6wu46().b[2][0]++, response?.data) ||
          /* istanbul ignore next */
          (cov_deps6wu46().b[2][1]++, response?.response) ||
          /* istanbul ignore next */
          (cov_deps6wu46().b[2][2]++, "No response received"),
          loading: false
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_deps6wu46().s[20]++;
        outputs[provider] = {
          provider,
          response: "",
          loading: false,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_deps6wu46().b[3][0]++, error.message) :
          /* istanbul ignore next */
          (cov_deps6wu46().b[3][1]++, "Unknown error")
        };
      }
      /* istanbul ignore next */
      cov_deps6wu46().s[21]++;
      setLlmOutputs({
        ...outputs
      });
    }));
    /* istanbul ignore next */
    cov_deps6wu46().s[22]++;
    await Promise.all(promises);
    /* istanbul ignore next */
    cov_deps6wu46().s[23]++;
    setIsTesting(false);
  };
  // Save prompt as a collection for now (MVP approach)
  /* istanbul ignore next */
  cov_deps6wu46().s[24]++;
  const handleSavePrompt = async () => {
    /* istanbul ignore next */
    cov_deps6wu46().f[4]++;
    cov_deps6wu46().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_deps6wu46().b[5][0]++, !promptData.title.trim()) ||
    /* istanbul ignore next */
    (cov_deps6wu46().b[5][1]++, !promptData.content.trim())) {
      /* istanbul ignore next */
      cov_deps6wu46().b[4][0]++;
      cov_deps6wu46().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_deps6wu46().b[4][1]++;
    }
    cov_deps6wu46().s[27]++;
    setIsSaving(true);
    /* istanbul ignore next */
    cov_deps6wu46().s[28]++;
    try {
      const collection =
      /* istanbul ignore next */
      (cov_deps6wu46().s[29]++, {
        name: promptData.title,
        description: `${promptData.description}\n\nPrompt Content:\n${promptData.content}`,
        type: "private",
        owner_id:
        /* istanbul ignore next */
        (cov_deps6wu46().b[6][0]++, user?.id) ||
        /* istanbul ignore next */
        (cov_deps6wu46().b[6][1]++, "dev-user"),
        tags: ["prompt"]
      });
      /* istanbul ignore next */
      cov_deps6wu46().s[30]++;
      if (id) {
        /* istanbul ignore next */
        cov_deps6wu46().b[7][0]++;
        cov_deps6wu46().s[31]++;
        // Update existing collection
        await collectionsApi.update(id, collection);
      } else {
        /* istanbul ignore next */
        cov_deps6wu46().b[7][1]++;
        cov_deps6wu46().s[32]++;
        // Create new collection
        await collectionsApi.create(collection);
      }
      /* istanbul ignore next */
      cov_deps6wu46().s[33]++;
      navigate("/collections");
    } catch (error) {
      /* istanbul ignore next */
      cov_deps6wu46().s[34]++;
      console.error("Error saving prompt:", error);
    } finally {
      /* istanbul ignore next */
      cov_deps6wu46().s[35]++;
      setIsSaving(false);
    }
  };
  /* istanbul ignore next */
  cov_deps6wu46().s[36]++;
  const updatePromptData = (field, value) => {
    /* istanbul ignore next */
    cov_deps6wu46().f[5]++;
    cov_deps6wu46().s[37]++;
    setPromptData(prev => {
      /* istanbul ignore next */
      cov_deps6wu46().f[6]++;
      cov_deps6wu46().s[38]++;
      return {
        ...prev,
        [field]: value
      };
    });
  };
  /* istanbul ignore next */
  cov_deps6wu46().s[39]++;
  return _jsxs("div", {
    className: "max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8",
    children: [_jsxs("div", {
      className: "mb-8",
      children: [_jsx("h1", {
        className: "text-2xl font-bold text-gray-900",
        children: "Prompt Builder"
      }), _jsx("p", {
        className: "mt-1 text-sm text-gray-600",
        children: "Create and test AI prompts with multi-LLM comparison"
      })]
    }), _jsxs("div", {
      className: "grid grid-cols-1 lg:grid-cols-2 gap-6",
      children: [_jsxs("div", {
        className: "space-y-6",
        children: [_jsxs("div", {
          className: "bg-white shadow rounded-lg p-6",
          children: [_jsx("h2", {
            className: "text-lg font-medium text-gray-900 mb-4",
            children: "Prompt Details"
          }), _jsxs("div", {
            className: "space-y-4",
            children: [_jsxs("div", {
              children: [_jsx("label", {
                htmlFor: "title",
                className: "block text-sm font-medium text-gray-700",
                children: "Title"
              }), _jsx("input", {
                type: "text",
                id: "title",
                value: promptData.title,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_deps6wu46().f[7]++;
                  cov_deps6wu46().s[40]++;
                  return updatePromptData("title", e.target.value);
                },
                className: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",
                placeholder: "Enter prompt title"
              })]
            }), _jsxs("div", {
              children: [_jsx("label", {
                htmlFor: "description",
                className: "block text-sm font-medium text-gray-700",
                children: "Description"
              }), _jsx("textarea", {
                id: "description",
                rows: 3,
                value: promptData.description,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_deps6wu46().f[8]++;
                  cov_deps6wu46().s[41]++;
                  return updatePromptData("description", e.target.value);
                },
                className: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",
                placeholder: "Describe what this prompt does"
              })]
            })]
          })]
        }), _jsxs("div", {
          className: "bg-white shadow rounded-lg p-6",
          children: [_jsx("h2", {
            className: "text-lg font-medium text-gray-900 mb-4",
            children: "Prompt Text"
          }), _jsx("div", {
            children: _jsx("textarea", {
              value: promptData.content,
              onChange: e => {
                /* istanbul ignore next */
                cov_deps6wu46().f[9]++;
                cov_deps6wu46().s[42]++;
                return updatePromptData("content", e.target.value);
              },
              rows: 10,
              className: "block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm",
              placeholder: "Write your prompt here..."
            })
          })]
        }), _jsx(PromptCoach, {
          promptContent: promptData.content,
          intention: promptData.description,
          contextDetails: {},
          onSuggestionApply: suggestion => {
            /* istanbul ignore next */
            cov_deps6wu46().f[10]++;
            cov_deps6wu46().s[43]++;
            // Add suggestion to the end of prompt content
            updatePromptData("content", promptData.content + "\n\n" + suggestion);
          }
        }), _jsxs("div", {
          className: "bg-white shadow rounded-lg p-6",
          children: [_jsx("h2", {
            className: "text-lg font-medium text-gray-900 mb-4",
            children: "LLM Selection"
          }), _jsx("div", {
            className: "space-y-2",
            children: ["openai", "anthropic", "google"].map(llm => {
              /* istanbul ignore next */
              cov_deps6wu46().f[11]++;
              cov_deps6wu46().s[44]++;
              return _jsxs("label", {
                className: "flex items-center",
                children: [_jsx("input", {
                  type: "checkbox",
                  checked: selectedLLMs.includes(llm),
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_deps6wu46().f[12]++;
                    cov_deps6wu46().s[45]++;
                    if (e.target.checked) {
                      /* istanbul ignore next */
                      cov_deps6wu46().b[8][0]++;
                      cov_deps6wu46().s[46]++;
                      setSelectedLLMs([...selectedLLMs, llm]);
                    } else {
                      /* istanbul ignore next */
                      cov_deps6wu46().b[8][1]++;
                      cov_deps6wu46().s[47]++;
                      setSelectedLLMs(selectedLLMs.filter(l => {
                        /* istanbul ignore next */
                        cov_deps6wu46().f[13]++;
                        cov_deps6wu46().s[48]++;
                        return l !== llm;
                      }));
                    }
                  },
                  className: "h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded"
                }), _jsx("span", {
                  className: "ml-2 text-sm text-gray-700 capitalize",
                  children: llm
                })]
              }, llm);
            })
          })]
        }), _jsxs("div", {
          className: "flex space-x-4",
          children: [_jsx("button", {
            type: "button",
            onClick: handleTestPrompt,
            disabled:
            /* istanbul ignore next */
            (cov_deps6wu46().b[9][0]++, isTesting) ||
            /* istanbul ignore next */
            (cov_deps6wu46().b[9][1]++, !promptData.content.trim()),
            className: "flex-1 bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed",
            children: isTesting ?
            /* istanbul ignore next */
            (cov_deps6wu46().b[10][0]++, "Testing...") :
            /* istanbul ignore next */
            (cov_deps6wu46().b[10][1]++, "Test Prompt")
          }), _jsx("button", {
            type: "button",
            onClick: handleSavePrompt,
            disabled:
            /* istanbul ignore next */
            (cov_deps6wu46().b[11][0]++, isSaving) ||
            /* istanbul ignore next */
            (cov_deps6wu46().b[11][1]++, !promptData.title.trim()) ||
            /* istanbul ignore next */
            (cov_deps6wu46().b[11][2]++, !promptData.content.trim()),
            className: "flex-1 bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 disabled:opacity-50 disabled:cursor-not-allowed",
            children: isSaving ?
            /* istanbul ignore next */
            (cov_deps6wu46().b[12][0]++, "Saving...") :
            /* istanbul ignore next */
            (cov_deps6wu46().b[12][1]++, "Save Prompt")
          })]
        })]
      }), _jsxs("div", {
        className: "space-y-6",
        children: [_jsxs("div", {
          className: "bg-white shadow rounded-lg p-6",
          children: [_jsx("h2", {
            className: "text-lg font-medium text-gray-900 mb-4",
            children: "LLM Outputs"
          }), _jsx("div", {
            className: "space-y-4",
            children: selectedLLMs.map(llm => {
              /* istanbul ignore next */
              cov_deps6wu46().f[14]++;
              const output =
              /* istanbul ignore next */
              (cov_deps6wu46().s[49]++, llmOutputs[llm]);
              /* istanbul ignore next */
              cov_deps6wu46().s[50]++;
              return _jsxs("div", {
                className: "border border-gray-200 rounded-lg p-4",
                children: [_jsxs("h3", {
                  className: "text-sm font-medium text-gray-900 mb-2 capitalize",
                  children: [llm, " Response"]
                }), _jsx("div", {
                  className: "bg-gray-50 rounded p-3 min-h-[100px] text-sm",
                  children: output?.loading ?
                  /* istanbul ignore next */
                  (cov_deps6wu46().b[13][0]++, _jsxs("div", {
                    className: "flex items-center text-gray-600",
                    children: [_jsx("div", {
                      className: "animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600 mr-2"
                    }), "Generating response..."]
                  })) :
                  /* istanbul ignore next */
                  (cov_deps6wu46().b[13][1]++, output?.error ?
                  /* istanbul ignore next */
                  (cov_deps6wu46().b[14][0]++, _jsxs("div", {
                    className: "text-red-600",
                    children: ["Error: ", output.error]
                  })) :
                  /* istanbul ignore next */
                  (cov_deps6wu46().b[14][1]++, output?.response ?
                  /* istanbul ignore next */
                  (cov_deps6wu46().b[15][0]++, _jsx("div", {
                    className: "text-gray-900 whitespace-pre-wrap",
                    children: output.response
                  })) :
                  /* istanbul ignore next */
                  (cov_deps6wu46().b[15][1]++, _jsxs("div", {
                    className: "text-gray-600",
                    children: ["Click \"Test Prompt\" to see ", llm, " response"]
                  }))))
                })]
              }, llm);
            })
          })]
        }), _jsxs("div", {
          className: "bg-white shadow rounded-lg p-6",
          children: [_jsx("h2", {
            className: "text-lg font-medium text-gray-900 mb-4",
            children: "Prompt Coach"
          }), _jsx("div", {
            className: "bg-blue-50 rounded-lg p-4",
            children: _jsx("p", {
              className: "text-sm text-blue-700",
              children: "\uD83D\uDCA1 AI-powered suggestions will appear here to help improve your prompt"
            })
          })]
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,