e7e0d4bcd065615080f162b2131b8462
/* istanbul ignore next */
function cov_zferir0lg() {
  var path = "/Users/vedprakashmishra/sutra/src/hooks/useApi.ts";
  var hash = "8afc179a99c327673cc5542cda111e1b832b1946";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/vedprakashmishra/sutra/src/hooks/useApi.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 30
        },
        end: {
          line: 9,
          column: 6
        }
      },
      "1": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "2": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 70
        }
      },
      "4": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 67
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "6": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 17,
          column: 13
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "8": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 42
        }
      },
      "9": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 23,
          column: 15
        }
      },
      "10": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "11": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 38,
          column: 33
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "13": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "14": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 42,
          column: 6
        }
      },
      "15": {
        start: {
          line: 45,
          column: 34
        },
        end: {
          line: 45,
          column: 49
        }
      },
      "16": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 46,
          column: 44
        }
      },
      "17": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 47,
          column: 31
        }
      },
      "18": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 23
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "22": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "24": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 41
        }
      },
      "25": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 26
        }
      },
      "26": {
        start: {
          line: 60,
          column: 33
        },
        end: {
          line: 60,
          column: 93
        }
      },
      "27": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "28": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 24
        }
      },
      "29": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 30
        }
      },
      "30": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 72,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "useApi",
        decl: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 22
          }
        },
        loc: {
          start: {
            line: 4,
            column: 51
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 11,
            column: 23
          }
        },
        loc: {
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 12,
            column: 67
          }
        },
        line: 12
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 14
          },
          end: {
            line: 33,
            column: 15
          }
        },
        loc: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 33
      },
      "4": {
        name: "useAsyncAction",
        decl: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 30
          }
        },
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 21
          }
        },
        loc: {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 32
          },
          end: {
            line: 4,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 4,
            column: 47
          },
          end: {
            line: 4,
            column: 49
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 17,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 61
          }
        }, {
          start: {
            line: 29,
            column: 64
          },
          end: {
            line: 29,
            column: 83
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 58
          },
          end: {
            line: 60,
            column: 71
          }
        }, {
          start: {
            line: 60,
            column: 74
          },
          end: {
            line: 60,
            column: 93
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/vedprakashmishra/sutra/src/hooks/useApi.ts",
      mappings: "AAAA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAQ1D,MAAM,UAAU,MAAM,CACpB,OAAyB,EACzB,eAAsB,EAAE;IAExB,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAiB;QACjD,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,IAAI;KACZ,CAAC,CAAC;IAEH,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC;IAE5B,MAAM,SAAS,GAAG,KAAK,IAAI,EAAE;QAC3B,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC;YACH,sCAAsC;YACtC,IAAI,KAAK,EAAE,CAAC;gBACV,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,OAAO,EAAE,CAAC;YAC/B,QAAQ,CAAC;gBACP,IAAI,EAAE,MAAM;gBACZ,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,QAAQ,CAAC;gBACP,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB;aACpE,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;YACnB,2CAA2C;YAC3C,SAAS,EAAE,CAAC;QACd,CAAC;IACH,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC;IAE7B,OAAO;QACL,GAAG,KAAK;QACR,OAAO,EAAE,SAAS;KACnB,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,cAAc;IAC5B,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IACxD,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,CAAC;IAE5B,MAAM,OAAO,GAAG,KAAK,EAAE,MAAwB,EAAqB,EAAE;QACpE,UAAU,CAAC,IAAI,CAAC,CAAC;QACjB,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEf,IAAI,CAAC;YACH,sCAAsC;YACtC,IAAI,KAAK,EAAE,CAAC;gBACV,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,MAAM,EAAE,CAAC;YAC9B,OAAO,MAAM,CAAC;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,YAAY,GAChB,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC;YAC/D,QAAQ,CAAC,YAAY,CAAC,CAAC;YACvB,MAAM,KAAK,CAAC;QACd,CAAC;gBAAS,CAAC;YACT,UAAU,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;QACL,OAAO;QACP,KAAK;QACL,OAAO;KACR,CAAC;AACJ,CAAC",
      names: [],
      sources: ["/Users/vedprakashmishra/sutra/src/hooks/useApi.ts"],
      sourcesContent: ["import { useState, useEffect } from \"react\";\nimport { apiService } from \"../services/api\";\nimport { useAuth } from \"../components/auth/AuthProvider\";\n\nexport interface UseApiState<T> {\n  data: T | null;\n  loading: boolean;\n  error: string | null;\n}\n\nexport function useApi<T>(\n  apiCall: () => Promise<T>,\n  dependencies: any[] = [],\n): UseApiState<T> & { refetch: () => Promise<void> } {\n  const [state, setState] = useState<UseApiState<T>>({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  const { token } = useAuth();\n\n  const fetchData = async () => {\n    setState((prev) => ({ ...prev, loading: true, error: null }));\n\n    try {\n      // Set the auth token for API requests\n      if (token) {\n        apiService.setToken(token);\n      }\n\n      const result = await apiCall();\n      setState({\n        data: result,\n        loading: false,\n        error: null,\n      });\n    } catch (error) {\n      setState({\n        data: null,\n        loading: false,\n        error: error instanceof Error ? error.message : \"An error occurred\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (token !== null) {\n      // Only fetch when auth state is determined\n      fetchData();\n    }\n  }, [token, ...dependencies]);\n\n  return {\n    ...state,\n    refetch: fetchData,\n  };\n}\n\nexport function useAsyncAction<T = any>() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { token } = useAuth();\n\n  const execute = async (action: () => Promise<T>): Promise<T | null> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Set the auth token for API requests\n      if (token) {\n        apiService.setToken(token);\n      }\n\n      const result = await action();\n      return result;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : \"An error occurred\";\n      setError(errorMessage);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    loading,\n    error,\n    execute,\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8afc179a99c327673cc5542cda111e1b832b1946"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zferir0lg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zferir0lg();
import { useState, useEffect } from "react";
import { apiService } from "../services/api";
import { useAuth } from "../components/auth/AuthProvider";
export function useApi(apiCall, dependencies =
/* istanbul ignore next */
(cov_zferir0lg().b[0][0]++, [])) {
  /* istanbul ignore next */
  cov_zferir0lg().f[0]++;
  const [state, setState] =
  /* istanbul ignore next */
  (cov_zferir0lg().s[0]++, useState({
    data: null,
    loading: true,
    error: null
  }));
  const {
    token
  } =
  /* istanbul ignore next */
  (cov_zferir0lg().s[1]++, useAuth());
  /* istanbul ignore next */
  cov_zferir0lg().s[2]++;
  const fetchData = async () => {
    /* istanbul ignore next */
    cov_zferir0lg().f[1]++;
    cov_zferir0lg().s[3]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_zferir0lg().f[2]++;
      cov_zferir0lg().s[4]++;
      return {
        ...prev,
        loading: true,
        error: null
      };
    });
    /* istanbul ignore next */
    cov_zferir0lg().s[5]++;
    try {
      /* istanbul ignore next */
      cov_zferir0lg().s[6]++;
      // Set the auth token for API requests
      if (token) {
        /* istanbul ignore next */
        cov_zferir0lg().b[1][0]++;
        cov_zferir0lg().s[7]++;
        apiService.setToken(token);
      } else
      /* istanbul ignore next */
      {
        cov_zferir0lg().b[1][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_zferir0lg().s[8]++, await apiCall());
      /* istanbul ignore next */
      cov_zferir0lg().s[9]++;
      setState({
        data: result,
        loading: false,
        error: null
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_zferir0lg().s[10]++;
      setState({
        data: null,
        loading: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_zferir0lg().b[2][0]++, error.message) :
        /* istanbul ignore next */
        (cov_zferir0lg().b[2][1]++, "An error occurred")
      });
    }
  };
  /* istanbul ignore next */
  cov_zferir0lg().s[11]++;
  useEffect(() => {
    /* istanbul ignore next */
    cov_zferir0lg().f[3]++;
    cov_zferir0lg().s[12]++;
    if (token !== null) {
      /* istanbul ignore next */
      cov_zferir0lg().b[3][0]++;
      cov_zferir0lg().s[13]++;
      // Only fetch when auth state is determined
      fetchData();
    } else
    /* istanbul ignore next */
    {
      cov_zferir0lg().b[3][1]++;
    }
  }, [token, ...dependencies]);
  /* istanbul ignore next */
  cov_zferir0lg().s[14]++;
  return {
    ...state,
    refetch: fetchData
  };
}
export function useAsyncAction() {
  /* istanbul ignore next */
  cov_zferir0lg().f[4]++;
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_zferir0lg().s[15]++, useState(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_zferir0lg().s[16]++, useState(null));
  const {
    token
  } =
  /* istanbul ignore next */
  (cov_zferir0lg().s[17]++, useAuth());
  /* istanbul ignore next */
  cov_zferir0lg().s[18]++;
  const execute = async action => {
    /* istanbul ignore next */
    cov_zferir0lg().f[5]++;
    cov_zferir0lg().s[19]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_zferir0lg().s[20]++;
    setError(null);
    /* istanbul ignore next */
    cov_zferir0lg().s[21]++;
    try {
      /* istanbul ignore next */
      cov_zferir0lg().s[22]++;
      // Set the auth token for API requests
      if (token) {
        /* istanbul ignore next */
        cov_zferir0lg().b[4][0]++;
        cov_zferir0lg().s[23]++;
        apiService.setToken(token);
      } else
      /* istanbul ignore next */
      {
        cov_zferir0lg().b[4][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_zferir0lg().s[24]++, await action());
      /* istanbul ignore next */
      cov_zferir0lg().s[25]++;
      return result;
    } catch (error) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_zferir0lg().s[26]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_zferir0lg().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_zferir0lg().b[5][1]++, "An error occurred"));
      /* istanbul ignore next */
      cov_zferir0lg().s[27]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_zferir0lg().s[28]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_zferir0lg().s[29]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_zferir0lg().s[30]++;
  return {
    loading,
    error,
    execute
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,