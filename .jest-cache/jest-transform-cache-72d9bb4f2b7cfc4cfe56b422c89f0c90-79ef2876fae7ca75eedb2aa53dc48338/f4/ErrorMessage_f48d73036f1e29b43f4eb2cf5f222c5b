a218720d7f0c9bcf0aeba16d54980af6
/* istanbul ignore next */
function cov_291pj3kp4t() {
  var path = "/Users/vedprakashmishra/sutra/src/components/shared/ErrorMessage.tsx";
  var hash = "e2d498f4782960876ebb2a511bb56838e2229d6c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/vedprakashmishra/sutra/src/components/shared/ErrorMessage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 1112
        }
      }
    },
    fnMap: {
      "0": {
        name: "ErrorMessage",
        decl: {
          start: {
            line: 2,
            column: 24
          },
          end: {
            line: 2,
            column: 36
          }
        },
        loc: {
          start: {
            line: 2,
            column: 77
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 39
          },
          end: {
            line: 2,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 2,
            column: 47
          },
          end: {
            line: 2,
            column: 54
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 902
          },
          end: {
            line: 3,
            column: 1096
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 902
          },
          end: {
            line: 3,
            column: 909
          }
        }, {
          start: {
            line: 3,
            column: 914
          },
          end: {
            line: 3,
            column: 1095
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/vedprakashmishra/sutra/src/components/shared/ErrorMessage.tsx",
      mappings: ";AAMA,MAAM,CAAC,OAAO,UAAU,YAAY,CAAC,EACnC,KAAK,GAAG,OAAO,EACf,OAAO,EACP,OAAO,GACW;IAClB,OAAO,CACL,cAAK,SAAS,EAAC,kBAAkB,YAC/B,cAAK,SAAS,EAAC,6DAA6D,YAC1E,eAAK,SAAS,EAAC,mBAAmB,aAChC,cAAK,SAAS,EAAC,eAAe,YAC5B,cACE,SAAS,EAAC,sBAAsB,EAChC,OAAO,EAAC,WAAW,EACnB,IAAI,EAAC,cAAc,YAEnB,eACE,QAAQ,EAAC,SAAS,EAClB,CAAC,EAAC,yNAAyN,EAC3N,QAAQ,EAAC,SAAS,GAClB,GACE,GACF,EACN,eAAK,SAAS,EAAC,gBAAgB,aAC7B,aAAI,SAAS,EAAC,kCAAkC,YAAE,KAAK,GAAM,EAC7D,cAAK,SAAS,EAAC,2BAA2B,YACxC,sBAAI,OAAO,GAAK,GACZ,EACL,OAAO,IAAI,CACV,cAAK,SAAS,EAAC,MAAM,YACnB,iBACE,OAAO,EAAE,OAAO,EAChB,SAAS,EAAC,+DAA+D,0BAGlE,GACL,CACP,IACG,IACF,GACF,GACF,CACP,CAAC;AACJ,CAAC",
      names: [],
      sources: ["/Users/vedprakashmishra/sutra/src/components/shared/ErrorMessage.tsx"],
      sourcesContent: ["interface ErrorMessageProps {\n  title?: string;\n  message: string;\n  onRetry?: () => void;\n}\n\nexport default function ErrorMessage({\n  title = \"Error\",\n  message,\n  onRetry,\n}: ErrorMessageProps) {\n  return (\n    <div className=\"text-center py-8\">\n      <div className=\"bg-red-50 border border-red-200 rounded-md p-4 inline-block\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <svg\n              className=\"h-5 w-5 text-red-400\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n          <div className=\"ml-3 text-left\">\n            <h3 className=\"text-sm font-medium text-red-800\">{title}</h3>\n            <div className=\"mt-2 text-sm text-red-700\">\n              <p>{message}</p>\n            </div>\n            {onRetry && (\n              <div className=\"mt-3\">\n                <button\n                  onClick={onRetry}\n                  className=\"text-sm font-medium text-red-800 hover:text-red-900 underline\"\n                >\n                  Try again\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e2d498f4782960876ebb2a511bb56838e2229d6c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_291pj3kp4t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_291pj3kp4t();
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export default function ErrorMessage({
  title =
  /* istanbul ignore next */
  (cov_291pj3kp4t().b[0][0]++, "Error"),
  message,
  onRetry
}) {
  /* istanbul ignore next */
  cov_291pj3kp4t().f[0]++;
  cov_291pj3kp4t().s[0]++;
  return _jsx("div", {
    className: "text-center py-8",
    children: _jsx("div", {
      className: "bg-red-50 border border-red-200 rounded-md p-4 inline-block",
      children: _jsxs("div", {
        className: "flex items-center",
        children: [_jsx("div", {
          className: "flex-shrink-0",
          children: _jsx("svg", {
            className: "h-5 w-5 text-red-400",
            viewBox: "0 0 20 20",
            fill: "currentColor",
            children: _jsx("path", {
              fillRule: "evenodd",
              d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z",
              clipRule: "evenodd"
            })
          })
        }), _jsxs("div", {
          className: "ml-3 text-left",
          children: [_jsx("h3", {
            className: "text-sm font-medium text-red-800",
            children: title
          }), _jsx("div", {
            className: "mt-2 text-sm text-red-700",
            children: _jsx("p", {
              children: message
            })
          }),
          /* istanbul ignore next */
          (cov_291pj3kp4t().b[1][0]++, onRetry) &&
          /* istanbul ignore next */
          (cov_291pj3kp4t().b[1][1]++, _jsx("div", {
            className: "mt-3",
            children: _jsx("button", {
              onClick: onRetry,
              className: "text-sm font-medium text-red-800 hover:text-red-900 underline",
              children: "Try again"
            })
          }))]
        })]
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFcnJvck1lc3NhZ2UiLCJ0aXRsZSIsImNvdl8yOTFwajNrcDR0IiwiYiIsIm1lc3NhZ2UiLCJvblJldHJ5IiwiZiIsInMiLCJfanN4IiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJfanN4cyIsInZpZXdCb3giLCJmaWxsIiwiZmlsbFJ1bGUiLCJkIiwiY2xpcFJ1bGUiLCJvbkNsaWNrIl0sInNvdXJjZXMiOlsiL1VzZXJzL3ZlZHByYWthc2htaXNocmEvc3V0cmEvc3JjL2NvbXBvbmVudHMvc2hhcmVkL0Vycm9yTWVzc2FnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIEVycm9yTWVzc2FnZVByb3BzIHtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgb25SZXRyeT86ICgpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVycm9yTWVzc2FnZSh7XG4gIHRpdGxlID0gXCJFcnJvclwiLFxuICBtZXNzYWdlLFxuICBvblJldHJ5LFxufTogRXJyb3JNZXNzYWdlUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyIHB5LThcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctcmVkLTUwIGJvcmRlciBib3JkZXItcmVkLTIwMCByb3VuZGVkLW1kIHAtNCBpbmxpbmUtYmxvY2tcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC1zaHJpbmstMFwiPlxuICAgICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLTUgdy01IHRleHQtcmVkLTQwMFwiXG4gICAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMjAgMjBcIlxuICAgICAgICAgICAgICBmaWxsPVwiY3VycmVudENvbG9yXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgICAgICAgICAgIGQ9XCJNMTAgMThhOCA4IDAgMTAwLTE2IDggOCAwIDAwMCAxNnpNOC43MDcgNy4yOTNhMSAxIDAgMDAtMS40MTQgMS40MTRMOC41ODYgMTBsLTEuMjkzIDEuMjkzYTEgMSAwIDEwMS40MTQgMS40MTRMMTAgMTEuNDE0bDEuMjkzIDEuMjkzYTEgMSAwIDAwMS40MTQtMS40MTRMMTEuNDE0IDEwbDEuMjkzLTEuMjkzYTEgMSAwIDAwLTEuNDE0LTEuNDE0TDEwIDguNTg2IDguNzA3IDcuMjkzelwiXG4gICAgICAgICAgICAgICAgY2xpcFJ1bGU9XCJldmVub2RkXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWwtMyB0ZXh0LWxlZnRcIj5cbiAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtcmVkLTgwMFwiPnt0aXRsZX08L2gzPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC0yIHRleHQtc20gdGV4dC1yZWQtNzAwXCI+XG4gICAgICAgICAgICAgIDxwPnttZXNzYWdlfTwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge29uUmV0cnkgJiYgKFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTNcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvblJldHJ5fVxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LXJlZC04MDAgaG92ZXI6dGV4dC1yZWQtOTAwIHVuZGVybGluZVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgVHJ5IGFnYWluXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTUEsZUFBYyxTQUFVQSxZQUFZQSxDQUFDO0VBQ25DQyxLQUFLO0VBQUE7RUFBQSxDQUFBQyxjQUFBLEdBQUFDLENBQUEsVUFBRyxPQUFPO0VBQ2ZDLE9BQU87RUFDUEM7QUFBTyxDQUNXO0VBQUE7RUFBQUgsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUNsQixPQUNFQyxJQUFBO0lBQUtDLFNBQVMsRUFBQyxrQkFBa0I7SUFBQUMsUUFBQSxFQUMvQkYsSUFBQTtNQUFLQyxTQUFTLEVBQUMsNkRBQTZEO01BQUFDLFFBQUEsRUFDMUVDLEtBQUE7UUFBS0YsU0FBUyxFQUFDLG1CQUFtQjtRQUFBQyxRQUFBLEdBQ2hDRixJQUFBO1VBQUtDLFNBQVMsRUFBQyxlQUFlO1VBQUFDLFFBQUEsRUFDNUJGLElBQUE7WUFDRUMsU0FBUyxFQUFDLHNCQUFzQjtZQUNoQ0csT0FBTyxFQUFDLFdBQVc7WUFDbkJDLElBQUksRUFBQyxjQUFjO1lBQUFILFFBQUEsRUFFbkJGLElBQUE7Y0FDRU0sUUFBUSxFQUFDLFNBQVM7Y0FDbEJDLENBQUMsRUFBQyx5TkFBeU47Y0FDM05DLFFBQVEsRUFBQztZQUFTO1VBQ2xCO1FBQ0UsRUFDRixFQUNOTCxLQUFBO1VBQUtGLFNBQVMsRUFBQyxnQkFBZ0I7VUFBQUMsUUFBQSxHQUM3QkYsSUFBQTtZQUFJQyxTQUFTLEVBQUMsa0NBQWtDO1lBQUFDLFFBQUEsRUFBRVQ7VUFBSyxFQUFNLEVBQzdETyxJQUFBO1lBQUtDLFNBQVMsRUFBQywyQkFBMkI7WUFBQUMsUUFBQSxFQUN4Q0YsSUFBQTtjQUFBRSxRQUFBLEVBQUlOO1lBQU87VUFBSyxFQUNaO1VBQ0w7VUFBQSxDQUFBRixjQUFBLEdBQUFDLENBQUEsVUFBQUUsT0FBTztVQUFBO1VBQUEsQ0FBQUgsY0FBQSxHQUFBQyxDQUFBLFVBQ05LLElBQUE7WUFBS0MsU0FBUyxFQUFDLE1BQU07WUFBQUMsUUFBQSxFQUNuQkYsSUFBQTtjQUNFUyxPQUFPLEVBQUVaLE9BQU87Y0FDaEJJLFNBQVMsRUFBQywrREFBK0Q7Y0FBQUMsUUFBQTtZQUFBO1VBR2xFLEVBQ0wsQ0FDUDtRQUFBLEVBQ0c7TUFBQTtJQUNGO0VBQ0YsRUFDRjtBQUVWIiwiaWdub3JlTGlzdCI6W119