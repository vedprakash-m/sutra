{"version":3,"names":["cov_1doqv66wke","actualCoverage","createContext","useContext","useState","useEffect","AuthContext","s","undefined","useAuth","f","context","b","Error","AuthProvider","children","user","setUser","isLoading","setIsLoading","token","setToken","isAuthenticated","isAdmin","roles","includes","savedUser","localStorage","getItem","savedToken","JSON","parse","login","email","isAdminUser","mockUser","id","name","mockToken","setItem","stringify","error","console","logout","removeItem","value","_jsx","Provider"],"sources":["/Users/vedprakashmishra/sutra/src/components/auth/AuthProvider.tsx"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  ReactNode,\n  useState,\n  useEffect,\n} from \"react\";\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  roles: string[];\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email?: string, isAdmin?: boolean) => Promise<void>;\n  logout: () => Promise<void>;\n  isAdmin: boolean;\n  token: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [token, setToken] = useState<string | null>(null);\n\n  const isAuthenticated = !!user;\n  const isAdmin = user?.roles.includes(\"admin\") ?? false;\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"sutra_user\");\n    const savedToken = localStorage.getItem(\"sutra_token\");\n\n    if (savedUser && savedToken) {\n      setUser(JSON.parse(savedUser));\n      setToken(savedToken);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email = \"user@sutra.ai\", isAdminUser = false) => {\n    setIsLoading(true);\n    try {\n      // Development mode authentication\n      const mockUser: User = {\n        id: isAdminUser ? \"mock-admin-id\" : \"mock-user-id\",\n        email: isAdminUser ? \"admin@sutra.ai\" : email,\n        name: isAdminUser ? \"Development Admin\" : \"Development User\",\n        roles: isAdminUser ? [\"admin\", \"user\"] : [\"user\"],\n      };\n\n      const mockToken = isAdminUser ? \"mock-admin-token\" : \"mock-token\";\n\n      setUser(mockUser);\n      setToken(mockToken);\n\n      // Save to localStorage\n      localStorage.setItem(\"sutra_user\", JSON.stringify(mockUser));\n      localStorage.setItem(\"sutra_token\", mockToken);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(\"sutra_user\");\n    localStorage.removeItem(\"sutra_token\");\n  };\n\n  const value: AuthContextType = {\n    user,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout,\n    isAdmin,\n    token,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],"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","ignoreList":[]}