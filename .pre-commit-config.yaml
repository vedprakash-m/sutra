# Pre-commit configuration for Sutra
# Run: pip install pre-commit && pre-commit install

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
        exclude: tsconfig.*\.json$
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: detect-private-key

  # Frontend linting and formatting
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: npm run lint
        language: system
        files: \.(ts|tsx|js|jsx)$
        pass_filenames: false

      - id: prettier
        name: Prettier
        entry: npm run format
        language: system
        files: \.(ts|tsx|js|jsx|json|md|yml|yaml)$
        pass_filenames: false
        exclude: (node_modules/|\.venv/|dist/|coverage/)

      - id: typescript
        name: TypeScript
        entry: npm run type-check
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false

  # Python hooks - Re-enabled for code quality enforcement
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        files: api/.*\.py$

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=127, --ignore=E203, W503]
        files: api/.*\.py$

  # Security - temporarily simplified
  # - repo: https://github.com/Yelp/detect-secrets
  #   rev: v1.4.0
  #   hooks:
  #     - id: detect-secrets
  #       args: ["--baseline", ".secrets.baseline"]
  #       exclude: package-lock.json|\.jest-cache/|\.venv/|\.venv-test/|node_modules/|__pycache__/|\.git/

  # Infrastructure validation - Re-enabled for deployment reliability
  - repo: local
    hooks:
      - id: bicep-build
        name: Bicep Build Validation
        entry: bash -c 'cd infrastructure && az bicep install && az bicep build --file persistent.bicep && az bicep build --file compute.bicep'
        language: system
        files: \.bicep$
        pass_filenames: false

      - id: product-alignment-check
        name: Product Documentation Alignment
        entry: bash -c 'echo "üîç Checking product alignment..." && ./scripts/validate-product-alignment.sh'
        language: system
        files: (src/|api/|docs/).*
        pass_filenames: false
        stages: [pre-commit]

# Fast hooks run first, slower ones later
default_stages: [pre-commit]
fail_fast: false
