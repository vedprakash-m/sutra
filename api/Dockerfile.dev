# Development container for Azure Functions
FROM mcr.microsoft.com/azure-functions/python:4-python3.12

# Set Azure Functions environment variables
ENV AzureWebJobsScriptRoot=/home/site/wwwroot \
    AzureFunctionsJobHost__Logging__Console__IsEnabled=true \
    FUNCTIONS_WORKER_RUNTIME=python

# Install system dependencies and Azure Functions Core Tools
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Azure Functions Core Tools
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg \
    && mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg \
    && echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-jammy-prod jammy main" > /etc/apt/sources.list.d/dotnetdev.list \
    && apt-get update \
    && apt-get install -y azure-functions-core-tools-4 \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install dependencies
# Use minimal requirements to avoid grpcio compilation issues
COPY requirements-minimal.txt requirements-ci.txt requirements.txt ./
RUN pip install --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r requirements-minimal.txt

# Copy function code
COPY . /home/site/wwwroot

# Ensure proper permissions
RUN chmod -R 755 /home/site/wwwroot

# Expose the Azure Functions port
EXPOSE 7071

# Create a robust startup script
RUN echo '#!/bin/bash\nset -e\necho "=== Azure Functions Container Starting ==="\necho "Environment: ${ENVIRONMENT:-development}"\necho "Python version: $(python --version)"\necho "Working directory: $(pwd)"\necho "Contents: $(ls -la)"\necho "Testing Python imports..."\npython -c "import sys; print(f\"Python path: {sys.path}\")" 2>/dev/null || echo "Python path check failed"\npython -c "import azure.functions; print(\"✓ Azure Functions imported successfully\")" 2>/dev/null || echo "✗ Azure Functions import failed"\necho "Available func command: $(which func || echo \"func not found\")"\necho "Func version: $(func --version 2>/dev/null || echo \"func version check failed\")"\necho "Starting Azure Functions host..."\necho "Command: func start --host 0.0.0.0 --port 7071"\nexec func start --host 0.0.0.0 --port 7071' > /start.sh && chmod +x /start.sh

# Start with the robust startup script
CMD ["/start.sh"]
